/*!
 * Bootstrap v4.0.0-alpha.6 (https://getbootstrap.com)
 * Copyright 2011-2017 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 */
/**
 * @name InfoBox
 * @version 1.1.13 [March 19, 2014]
 * @author Gary Little (inspired by proof-of-concept code from Pamela Fox of Google)
 * @copyright Copyright 2010 Gary Little [gary at luxcentral.com]
 * @fileoverview InfoBox extends the Google Maps JavaScript API V3 <tt>OverlayView</tt> class.
 *  <p>
 *  An InfoBox behaves like a <tt>google.maps.InfoWindow</tt>, but it supports several
 *  additional properties for advanced styling. An InfoBox can also be used as a map label.
 *  <p>
 *  An InfoBox also fires the same events as a <tt>google.maps.InfoWindow</tt>.
 */
/*!
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*jslint browser:true */
/*global google */
/**
 * @name InfoBoxOptions
 * @class This class represents the optional parameter passed to the {@link InfoBox} constructor.
 * @property {string|Node} content The content of the InfoBox (plain text or an HTML DOM node).
 * @property {boolean} [disableAutoPan=false] Disable auto-pan on <tt>open</tt>.
 * @property {number} maxWidth The maximum width (in pixels) of the InfoBox. Set to 0 if no maximum.
 * @property {Size} pixelOffset The offset (in pixels) from the top left corner of the InfoBox
 *  (or the bottom left corner if the <code>alignBottom</code> property is <code>true</code>)
 *  to the map pixel corresponding to <tt>position</tt>.
 * @property {LatLng} position The geographic location at which to display the InfoBox.
 * @property {number} zIndex The CSS z-index style value for the InfoBox.
 *  Note: This value overrides a zIndex setting specified in the <tt>boxStyle</tt> property.
 * @property {string} [boxClass="infoBox"] The name of the CSS class defining the styles for the InfoBox container.
 * @property {Object} [boxStyle] An object literal whose properties define specific CSS
 *  style values to be applied to the InfoBox. Style values defined here override those that may
 *  be defined in the <code>boxClass</code> style sheet. If this property is changed after the
 *  InfoBox has been created, all previously set styles (except those defined in the style sheet)
 *  are removed from the InfoBox before the new style values are applied.
 * @property {string} closeBoxMargin The CSS margin style value for the close box.
 *  The default is "2px" (a 2-pixel margin on all sides).
 * @property {string} closeBoxURL The URL of the image representing the close box.
 *  Note: The default is the URL for Google's standard close box.
 *  Set this property to "" if no close box is required.
 * @property {Size} infoBoxClearance Minimum offset (in pixels) from the InfoBox to the
 *  map edge after an auto-pan.
 * @property {boolean} [isHidden=false] Hide the InfoBox on <tt>open</tt>.
 *  [Deprecated in favor of the <tt>visible</tt> property.]
 * @property {boolean} [visible=true] Show the InfoBox on <tt>open</tt>.
 * @property {boolean} alignBottom Align the bottom left corner of the InfoBox to the <code>position</code>
 *  location (default is <tt>false</tt> which means that the top left corner of the InfoBox is aligned).
 * @property {string} pane The pane where the InfoBox is to appear (default is "floatPane").
 *  Set the pane to "mapPane" if the InfoBox is being used as a map label.
 *  Valid pane names are the property names for the <tt>google.maps.MapPanes</tt> object.
 * @property {boolean} enableEventPropagation Propagate mousedown, mousemove, mouseover, mouseout,
 *  mouseup, click, dblclick, touchstart, touchend, touchmove, and contextmenu events in the InfoBox
 *  (default is <tt>false</tt> to mimic the behavior of a <tt>google.maps.InfoWindow</tt>). Set
 *  this property to <tt>true</tt> if the InfoBox is being used as a map label.
 */
/**
 * Creates an InfoBox with the options specified in {@link InfoBoxOptions}.
 *  Call <tt>InfoBox.open</tt> to add the box to the map.
 * @constructor
 * @param {InfoBoxOptions} [opt_opts]
 */
function InfoBox(a) {
    a = a || {}, google.maps.OverlayView.apply(this, arguments), // Standard options (in common with google.maps.InfoWindow):
    //
    this.content_ = a.content || "", this.disableAutoPan_ = a.disableAutoPan || !1, 
    this.maxWidth_ = a.maxWidth || 0, this.pixelOffset_ = a.pixelOffset || new google.maps.Size(0, 0), 
    this.position_ = a.position || new google.maps.LatLng(0, 0), this.zIndex_ = a.zIndex || null, 
    // Additional options (unique to InfoBox):
    //
    this.boxClass_ = a.boxClass || "infoBox", this.boxStyle_ = a.boxStyle || {}, this.closeBoxMargin_ = a.closeBoxMargin || "2px", 
    this.closeBoxURL_ = a.closeBoxURL || "http://www.google.com/intl/en_us/mapfiles/close.gif", 
    "" === a.closeBoxURL && (this.closeBoxURL_ = ""), this.infoBoxClearance_ = a.infoBoxClearance || new google.maps.Size(1, 1), 
    void 0 === a.visible && (void 0 === a.isHidden ? a.visible = !0 : a.visible = !a.isHidden), 
    this.isHidden_ = !a.visible, this.alignBottom_ = a.alignBottom || !1, this.pane_ = a.pane || "floatPane", 
    this.enableEventPropagation_ = a.enableEventPropagation || !1, this.div_ = null, 
    this.closeListener_ = null, this.moveListener_ = null, this.contextListener_ = null, 
    this.eventListeners_ = null, this.fixedWidthSet_ = null;
}

if ("undefined" == typeof jQuery) throw new Error("Bootstrap's JavaScript requires jQuery. jQuery must be included before Bootstrap's JavaScript.");

+function(a) {
    var b = a.fn.jquery.split(" ")[0].split(".");
    if (b[0] < 2 && b[1] < 9 || 1 == b[0] && 9 == b[1] && b[2] < 1 || b[0] >= 4) throw new Error("Bootstrap's JavaScript requires at least jQuery v1.9.1 but less than v4.0.0");
}(jQuery), function() {
    "function" == typeof Symbol && Symbol.iterator, function() {
        function a(a, b) {
            for (var c = 0; c < b.length; c++) {
                var d = b[c];
                d.enumerable = d.enumerable || !1, d.configurable = !0, "value" in d && (d.writable = !0), 
                Object.defineProperty(a, d.key, d);
            }
        }
    }(), function(a) {
        // shoutout AngusCroll (https://goo.gl/pxwQGp)
        function b(a) {
            return {}.toString.call(a).match(/\s([a-zA-Z]+)/)[1].toLowerCase();
        }
        function c(a) {
            return (a[0] || a).nodeType;
        }
        function d() {
            return {
                bindType: g.end,
                delegateType: g.end,
                handle: function(b) {
                    if (a(b.target).is(this)) return b.handleObj.handler.apply(this, arguments);
                }
            };
        }
        function e() {
            if (window.QUnit) return !1;
            var a = document.createElement("bootstrap");
            for (var b in h) if (void 0 !== a.style[b]) return {
                end: h[b]
            };
            return !1;
        }
        function f(b) {
            var c = this, d = !1;
            return a(this).one(i.TRANSITION_END, function() {
                d = !0;
            }), setTimeout(function() {
                d || i.triggerTransitionEnd(c);
            }, b), this;
        }
        /**
   * ------------------------------------------------------------------------
   * Private TransitionEnd Helpers
   * ------------------------------------------------------------------------
   */
        var g = !1, h = {
            WebkitTransition: "webkitTransitionEnd",
            MozTransition: "transitionend",
            OTransition: "oTransitionEnd otransitionend",
            transition: "transitionend"
        }, i = {
            TRANSITION_END: "bsTransitionEnd",
            getUID: function(a) {
                do {
                    // eslint-disable-next-line no-bitwise
                    a += ~~(1e6 * Math.random());
                } while (document.getElementById(a));
                return a;
            },
            getSelectorFromElement: function(a) {
                var b = a.getAttribute("data-target");
                return b || (b = a.getAttribute("href") || "", b = /^#[a-z]/i.test(b) ? b : null), 
                b;
            },
            reflow: function(a) {
                return a.offsetHeight;
            },
            triggerTransitionEnd: function(b) {
                a(b).trigger(g.end);
            },
            supportsTransitionEnd: function() {
                return Boolean(g);
            },
            typeCheckConfig: function(a, d, e) {
                for (var f in e) if (e.hasOwnProperty(f)) {
                    var g = e[f], h = d[f], i = h && c(h) ? "element" : b(h);
                    if (!new RegExp(g).test(i)) throw new Error(a.toUpperCase() + ': Option "' + f + '" provided type "' + i + '" but expected type "' + g + '".');
                }
            }
        };
        (function() {
            g = e(), a.fn.emulateTransitionEnd = f, i.supportsTransitionEnd() && (a.event.special[i.TRANSITION_END] = d());
        })();
    }(jQuery);
}(), /* InfoBox extends OverlayView in the Google Maps API v3.
 */
InfoBox.prototype = new google.maps.OverlayView(), /**
 * Creates the DIV representing the InfoBox.
 * @private
 */
InfoBox.prototype.createInfoBoxDiv_ = function() {
    var a, b, c, d = this, e = function(a) {
        a.cancelBubble = !0, a.stopPropagation && a.stopPropagation();
    }, f = function(a) {
        a.returnValue = !1, a.preventDefault && a.preventDefault(), d.enableEventPropagation_ || e(a);
    };
    if (!this.div_) {
        if (this.div_ = document.createElement("div"), this.setBoxStyle_(), void 0 === this.content_.nodeType ? this.div_.innerHTML = this.getCloseBoxImg_() + this.content_ : (this.div_.innerHTML = this.getCloseBoxImg_(), 
        this.div_.appendChild(this.content_)), // Add the InfoBox DIV to the DOM
        this.getPanes()[this.pane_].appendChild(this.div_), this.addClickHandler_(), this.div_.style.width ? this.fixedWidthSet_ = !0 : 0 !== this.maxWidth_ && this.div_.offsetWidth > this.maxWidth_ ? (this.div_.style.width = this.maxWidth_, 
        this.div_.style.overflow = "auto", this.fixedWidthSet_ = !0) : (// The following code is needed to overcome problems with MSIE
        c = this.getBoxWidths_(), this.div_.style.width = this.div_.offsetWidth - c.left - c.right + "px", 
        this.fixedWidthSet_ = !1), this.panBox_(this.disableAutoPan_), !this.enableEventPropagation_) {
            for (this.eventListeners_ = [], // Cancel event propagation.
            //
            // Note: mousemove not included (to resolve Issue 152)
            b = [ "mousedown", "mouseover", "mouseout", "mouseup", "click", "dblclick", "touchstart", "touchend", "touchmove" ], 
            a = 0; a < b.length; a++) this.eventListeners_.push(google.maps.event.addDomListener(this.div_, b[a], e));
            // Workaround for Google bug that causes the cursor to change to a pointer
            // when the mouse moves over a marker underneath InfoBox.
            this.eventListeners_.push(google.maps.event.addDomListener(this.div_, "mouseover", function(a) {
                this.style.cursor = "default";
            }));
        }
        this.contextListener_ = google.maps.event.addDomListener(this.div_, "contextmenu", f), 
        /**
     * This event is fired when the DIV containing the InfoBox's content is attached to the DOM.
     * @name InfoBox#domready
     * @event
     */
        google.maps.event.trigger(this, "domready");
    }
}, /**
 * Returns the HTML <IMG> tag for the close box.
 * @private
 */
InfoBox.prototype.getCloseBoxImg_ = function() {
    var a = "";
    // Do this because Opera chokes on style='float: right;'
    // Required by MSIE
    return "" !== this.closeBoxURL_ && (a = "<img", a += " src='" + this.closeBoxURL_ + "'", 
    a += " align=right", a += " style='", a += " position: relative;", a += " cursor: pointer;", 
    a += " margin: " + this.closeBoxMargin_ + ";", a += "'>"), a;
}, /**
 * Adds the click handler to the InfoBox close box.
 * @private
 */
InfoBox.prototype.addClickHandler_ = function() {
    var a;
    "" !== this.closeBoxURL_ ? (a = this.div_.firstChild, this.closeListener_ = google.maps.event.addDomListener(a, "click", this.getCloseClickHandler_())) : this.closeListener_ = null;
}, /**
 * Returns the function to call when the user clicks the close box of an InfoBox.
 * @private
 */
InfoBox.prototype.getCloseClickHandler_ = function() {
    var a = this;
    return function(b) {
        // 1.0.3 fix: Always prevent propagation of a close box click to the map:
        b.cancelBubble = !0, b.stopPropagation && b.stopPropagation(), /**
     * This event is fired when the InfoBox's close box is clicked.
     * @name InfoBox#closeclick
     * @event
     */
        google.maps.event.trigger(a, "closeclick"), a.close();
    };
}, /**
 * Pans the map so that the InfoBox appears entirely within the map's visible area.
 * @private
 */
InfoBox.prototype.panBox_ = function(a) {
    var b, c = 0, d = 0;
    if (!a && (b = this.getMap()) instanceof google.maps.Map) {
        // Only pan if attached to map, not panorama
        b.getBounds().contains(this.position_) || // Marker not in visible area of map, so set center
        // of map to the marker position first.
        b.setCenter(this.position_), b.getBounds();
        var e = b.getDiv(), f = e.offsetWidth, g = e.offsetHeight, h = this.pixelOffset_.width, i = this.pixelOffset_.height, j = this.div_.offsetWidth, k = this.div_.offsetHeight, l = this.infoBoxClearance_.width, m = this.infoBoxClearance_.height, n = this.getProjection().fromLatLngToContainerPixel(this.position_);
        if (n.x < -h + l ? c = n.x + h - l : n.x + j + h + l > f && (c = n.x + j + h + l - f), 
        this.alignBottom_ ? n.y < -i + m + k ? d = n.y + i - m - k : n.y + i + m > g && (d = n.y + i + m - g) : n.y < -i + m ? d = n.y + i - m : n.y + k + i + m > g && (d = n.y + k + i + m - g), 
        0 !== c || 0 !== d) {
            // Move the map to the shifted center.
            //
            b.getCenter();
            b.panBy(c, d);
        }
    }
}, /**
 * Sets the style of the InfoBox by setting the style sheet and applying
 * other specific styles requested.
 * @private
 */
InfoBox.prototype.setBoxStyle_ = function() {
    var a, b;
    if (this.div_) {
        // Apply style values from the style sheet defined in the boxClass parameter:
        this.div_.className = this.boxClass_, // Clear existing inline style values:
        this.div_.style.cssText = "", // Apply style values defined in the boxStyle parameter:
        b = this.boxStyle_;
        for (a in b) b.hasOwnProperty(a) && (this.div_.style[a] = b[a]);
        // Fix for iOS disappearing InfoBox problem.
        // See http://stackoverflow.com/questions/9229535/google-maps-markers-disappear-at-certain-zoom-level-only-on-iphone-ipad
        this.div_.style.WebkitTransform = "translateZ(0)", // Fix up opacity style for benefit of MSIE:
        //
        void 0 !== this.div_.style.opacity && "" !== this.div_.style.opacity && (// See http://www.quirksmode.org/css/opacity.html
        this.div_.style.MsFilter = '"progid:DXImageTransform.Microsoft.Alpha(Opacity=' + 100 * this.div_.style.opacity + ')"', 
        this.div_.style.filter = "alpha(opacity=" + 100 * this.div_.style.opacity + ")"), 
        // Apply required styles:
        //
        this.div_.style.position = "absolute", this.div_.style.visibility = "hidden", null !== this.zIndex_ && (this.div_.style.zIndex = this.zIndex_);
    }
}, /**
 * Get the widths of the borders of the InfoBox.
 * @private
 * @return {Object} widths object (top, bottom left, right)
 */
InfoBox.prototype.getBoxWidths_ = function() {
    var a, b = {
        top: 0,
        bottom: 0,
        left: 0,
        right: 0
    }, c = this.div_;
    // The computed styles are always in pixel units (good!)
    // The current styles may not be in pixel units, but assume they are (bad!)
    return document.defaultView && document.defaultView.getComputedStyle ? (a = c.ownerDocument.defaultView.getComputedStyle(c, "")) && (b.top = parseInt(a.borderTopWidth, 10) || 0, 
    b.bottom = parseInt(a.borderBottomWidth, 10) || 0, b.left = parseInt(a.borderLeftWidth, 10) || 0, 
    b.right = parseInt(a.borderRightWidth, 10) || 0) : document.documentElement.currentStyle && c.currentStyle && (b.top = parseInt(c.currentStyle.borderTopWidth, 10) || 0, 
    b.bottom = parseInt(c.currentStyle.borderBottomWidth, 10) || 0, b.left = parseInt(c.currentStyle.borderLeftWidth, 10) || 0, 
    b.right = parseInt(c.currentStyle.borderRightWidth, 10) || 0), b;
}, /**
 * Invoked when <tt>close</tt> is called. Do not call it directly.
 */
InfoBox.prototype.onRemove = function() {
    this.div_ && (this.div_.parentNode.removeChild(this.div_), this.div_ = null);
}, /**
 * Draws the InfoBox based on the current map projection and zoom level.
 */
InfoBox.prototype.draw = function() {
    this.createInfoBoxDiv_();
    var a = this.getProjection().fromLatLngToDivPixel(this.position_);
    this.div_.style.left = a.x + this.pixelOffset_.width + "px", this.alignBottom_ ? this.div_.style.bottom = -(a.y + this.pixelOffset_.height) + "px" : this.div_.style.top = a.y + this.pixelOffset_.height + "px", 
    this.isHidden_ ? this.div_.style.visibility = "hidden" : this.div_.style.visibility = "visible";
}, /**
 * Sets the options for the InfoBox. Note that changes to the <tt>maxWidth</tt>,
 *  <tt>closeBoxMargin</tt>, <tt>closeBoxURL</tt>, and <tt>enableEventPropagation</tt>
 *  properties have no affect until the current InfoBox is <tt>close</tt>d and a new one
 *  is <tt>open</tt>ed.
 * @param {InfoBoxOptions} opt_opts
 */
InfoBox.prototype.setOptions = function(a) {
    void 0 !== a.boxClass && (// Must be first
    this.boxClass_ = a.boxClass, this.setBoxStyle_()), void 0 !== a.boxStyle && (// Must be second
    this.boxStyle_ = a.boxStyle, this.setBoxStyle_()), void 0 !== a.content && this.setContent(a.content), 
    void 0 !== a.disableAutoPan && (this.disableAutoPan_ = a.disableAutoPan), void 0 !== a.maxWidth && (this.maxWidth_ = a.maxWidth), 
    void 0 !== a.pixelOffset && (this.pixelOffset_ = a.pixelOffset), void 0 !== a.alignBottom && (this.alignBottom_ = a.alignBottom), 
    void 0 !== a.position && this.setPosition(a.position), void 0 !== a.zIndex && this.setZIndex(a.zIndex), 
    void 0 !== a.closeBoxMargin && (this.closeBoxMargin_ = a.closeBoxMargin), void 0 !== a.closeBoxURL && (this.closeBoxURL_ = a.closeBoxURL), 
    void 0 !== a.infoBoxClearance && (this.infoBoxClearance_ = a.infoBoxClearance), 
    void 0 !== a.isHidden && (this.isHidden_ = a.isHidden), void 0 !== a.visible && (this.isHidden_ = !a.visible), 
    void 0 !== a.enableEventPropagation && (this.enableEventPropagation_ = a.enableEventPropagation), 
    this.div_ && this.draw();
}, /**
 * Sets the content of the InfoBox.
 *  The content can be plain text or an HTML DOM node.
 * @param {string|Node} content
 */
InfoBox.prototype.setContent = function(a) {
    this.content_ = a, this.div_ && (this.closeListener_ && (google.maps.event.removeListener(this.closeListener_), 
    this.closeListener_ = null), // Odd code required to make things work with MSIE.
    //
    this.fixedWidthSet_ || (this.div_.style.width = ""), void 0 === a.nodeType ? this.div_.innerHTML = this.getCloseBoxImg_() + a : (this.div_.innerHTML = this.getCloseBoxImg_(), 
    this.div_.appendChild(a)), // Perverse code required to make things work with MSIE.
    // (Ensures the close box does, in fact, float to the right.)
    //
    this.fixedWidthSet_ || (this.div_.style.width = this.div_.offsetWidth + "px", void 0 === a.nodeType ? this.div_.innerHTML = this.getCloseBoxImg_() + a : (this.div_.innerHTML = this.getCloseBoxImg_(), 
    this.div_.appendChild(a))), this.addClickHandler_()), /**
   * This event is fired when the content of the InfoBox changes.
   * @name InfoBox#content_changed
   * @event
   */
    google.maps.event.trigger(this, "content_changed");
}, /**
 * Sets the geographic location of the InfoBox.
 * @param {LatLng} latlng
 */
InfoBox.prototype.setPosition = function(a) {
    this.position_ = a, this.div_ && this.draw(), /**
   * This event is fired when the position of the InfoBox changes.
   * @name InfoBox#position_changed
   * @event
   */
    google.maps.event.trigger(this, "position_changed");
}, /**
 * Sets the zIndex style for the InfoBox.
 * @param {number} index
 */
InfoBox.prototype.setZIndex = function(a) {
    this.zIndex_ = a, this.div_ && (this.div_.style.zIndex = a), /**
   * This event is fired when the zIndex of the InfoBox changes.
   * @name InfoBox#zindex_changed
   * @event
   */
    google.maps.event.trigger(this, "zindex_changed");
}, /**
 * Sets the visibility of the InfoBox.
 * @param {boolean} isVisible
 */
InfoBox.prototype.setVisible = function(a) {
    this.isHidden_ = !a, this.div_ && (this.div_.style.visibility = this.isHidden_ ? "hidden" : "visible");
}, /**
 * Returns the content of the InfoBox.
 * @returns {string}
 */
InfoBox.prototype.getContent = function() {
    return this.content_;
}, /**
 * Returns the geographic location of the InfoBox.
 * @returns {LatLng}
 */
InfoBox.prototype.getPosition = function() {
    return this.position_;
}, /**
 * Returns the zIndex for the InfoBox.
 * @returns {number}
 */
InfoBox.prototype.getZIndex = function() {
    return this.zIndex_;
}, /**
 * Returns a flag indicating whether the InfoBox is visible.
 * @returns {boolean}
 */
InfoBox.prototype.getVisible = function() {
    return void 0 !== this.getMap() && null !== this.getMap() && !this.isHidden_;
}, /**
 * Shows the InfoBox. [Deprecated; use <tt>setVisible</tt> instead.]
 */
InfoBox.prototype.show = function() {
    this.isHidden_ = !1, this.div_ && (this.div_.style.visibility = "visible");
}, /**
 * Hides the InfoBox. [Deprecated; use <tt>setVisible</tt> instead.]
 */
InfoBox.prototype.hide = function() {
    this.isHidden_ = !0, this.div_ && (this.div_.style.visibility = "hidden");
}, /**
 * Adds the InfoBox to the specified map or Street View panorama. If <tt>anchor</tt>
 *  (usually a <tt>google.maps.Marker</tt>) is specified, the position
 *  of the InfoBox is set to the position of the <tt>anchor</tt>. If the
 *  anchor is dragged to a new location, the InfoBox moves as well.
 * @param {Map|StreetViewPanorama} map
 * @param {MVCObject} [anchor]
 */
InfoBox.prototype.open = function(a, b) {
    var c = this;
    b && (this.position_ = b.getPosition(), this.moveListener_ = google.maps.event.addListener(b, "position_changed", function() {
        c.setPosition(this.getPosition());
    })), this.setMap(a), this.div_ && this.panBox_();
}, /**
 * Removes the InfoBox from the map.
 */
InfoBox.prototype.close = function() {
    var a;
    if (this.closeListener_ && (google.maps.event.removeListener(this.closeListener_), 
    this.closeListener_ = null), this.eventListeners_) {
        for (a = 0; a < this.eventListeners_.length; a++) google.maps.event.removeListener(this.eventListeners_[a]);
        this.eventListeners_ = null;
    }
    this.moveListener_ && (google.maps.event.removeListener(this.moveListener_), this.moveListener_ = null), 
    this.contextListener_ && (google.maps.event.removeListener(this.contextListener_), 
    this.contextListener_ = null), this.setMap(null);
}, /*!
 * Isotope PACKAGED v3.0.1
 *
 * Licensed GPLv3 for open source use
 * or Isotope Commercial License for commercial use
 *
 * http://isotope.metafizzy.co
 * Copyright 2016 Metafizzy
 */
function(a, b) {
    "use strict";
    "function" == typeof define && define.amd ? define("jquery-bridget/jquery-bridget", [ "jquery" ], function(c) {
        b(a, c);
    }) : "object" == typeof module && module.exports ? module.exports = b(a, require("jquery")) : a.jQueryBridget = b(a, a.jQuery);
}(window, function(a, b) {
    "use strict";
    function c(c, f, h) {
        function i(a, b, d) {
            var e, f = "$()." + c + '("' + b + '")';
            return a.each(function(a, i) {
                var j = h.data(i, c);
                if (!j) return void g(c + " not initialized. Cannot call methods, i.e. " + f);
                var k = j[b];
                if (!k || "_" == b.charAt(0)) return void g(f + " is not a valid method");
                var l = k.apply(j, d);
                e = void 0 === e ? l : e;
            }), void 0 !== e ? e : a;
        }
        function j(a, b) {
            a.each(function(a, d) {
                var e = h.data(d, c);
                e ? (e.option(b), e._init()) : (e = new f(d, b), h.data(d, c, e));
            });
        }
        (h = h || b || a.jQuery) && (f.prototype.option || (f.prototype.option = function(a) {
            h.isPlainObject(a) && (this.options = h.extend(!0, this.options, a));
        }), h.fn[c] = function(a) {
            if ("string" == typeof a) {
                return i(this, a, e.call(arguments, 1));
            }
            return j(this, a), this;
        }, d(h));
    }
    function d(a) {
        !a || a && a.bridget || (a.bridget = c);
    }
    var e = Array.prototype.slice, f = a.console, g = void 0 === f ? function() {} : function(a) {
        f.error(a);
    };
    return d(b || a.jQuery), c;
}), function(a, b) {
    "function" == typeof define && define.amd ? define("ev-emitter/ev-emitter", b) : "object" == typeof module && module.exports ? module.exports = b() : a.EvEmitter = b();
}("undefined" != typeof window ? window : this, function() {
    function a() {}
    var b = a.prototype;
    return b.on = function(a, b) {
        if (a && b) {
            var c = this._events = this._events || {}, d = c[a] = c[a] || [];
            return -1 == d.indexOf(b) && d.push(b), this;
        }
    }, b.once = function(a, b) {
        if (a && b) {
            this.on(a, b);
            var c = this._onceEvents = this._onceEvents || {};
            return (c[a] = c[a] || {})[b] = !0, this;
        }
    }, b.off = function(a, b) {
        var c = this._events && this._events[a];
        if (c && c.length) {
            var d = c.indexOf(b);
            return -1 != d && c.splice(d, 1), this;
        }
    }, b.emitEvent = function(a, b) {
        var c = this._events && this._events[a];
        if (c && c.length) {
            var d = 0, e = c[d];
            b = b || [];
            for (var f = this._onceEvents && this._onceEvents[a]; e; ) {
                var g = f && f[e];
                g && (this.off(a, e), delete f[e]), e.apply(this, b), d += g ? 0 : 1, e = c[d];
            }
            return this;
        }
    }, a;
}), function(a, b) {
    "use strict";
    "function" == typeof define && define.amd ? define("get-size/get-size", [], function() {
        return b();
    }) : "object" == typeof module && module.exports ? module.exports = b() : a.getSize = b();
}(window, function() {
    "use strict";
    function a(a) {
        var b = parseFloat(a);
        return -1 == a.indexOf("%") && !isNaN(b) && b;
    }
    function b() {}
    function c() {
        for (var a = {
            width: 0,
            height: 0,
            innerWidth: 0,
            innerHeight: 0,
            outerWidth: 0,
            outerHeight: 0
        }, b = 0; j > b; b++) {
            a[i[b]] = 0;
        }
        return a;
    }
    function d(a) {
        var b = getComputedStyle(a);
        return b || h("Style returned " + b + ". Are you running this code in a hidden iframe on Firefox? See http://bit.ly/getsizebug1"), 
        b;
    }
    function e() {
        if (!k) {
            k = !0;
            var b = document.createElement("div");
            b.style.width = "200px", b.style.padding = "1px 2px 3px 4px", b.style.borderStyle = "solid", 
            b.style.borderWidth = "1px 2px 3px 4px", b.style.boxSizing = "border-box";
            var c = document.body || document.documentElement;
            c.appendChild(b);
            var e = d(b);
            f.isBoxSizeOuter = g = 200 == a(e.width), c.removeChild(b);
        }
    }
    function f(b) {
        if (e(), "string" == typeof b && (b = document.querySelector(b)), b && "object" == typeof b && b.nodeType) {
            var f = d(b);
            if ("none" == f.display) return c();
            var h = {};
            h.width = b.offsetWidth, h.height = b.offsetHeight;
            for (var k = h.isBorderBox = "border-box" == f.boxSizing, l = 0; j > l; l++) {
                var m = i[l], n = f[m], o = parseFloat(n);
                h[m] = isNaN(o) ? 0 : o;
            }
            var p = h.paddingLeft + h.paddingRight, q = h.paddingTop + h.paddingBottom, r = h.marginLeft + h.marginRight, s = h.marginTop + h.marginBottom, t = h.borderLeftWidth + h.borderRightWidth, u = h.borderTopWidth + h.borderBottomWidth, v = k && g, w = a(f.width);
            !1 !== w && (h.width = w + (v ? 0 : p + t));
            var x = a(f.height);
            return !1 !== x && (h.height = x + (v ? 0 : q + u)), h.innerWidth = h.width - (p + t), 
            h.innerHeight = h.height - (q + u), h.outerWidth = h.width + r, h.outerHeight = h.height + s, 
            h;
        }
    }
    var g, h = "undefined" == typeof console ? b : function(a) {
        console.error(a);
    }, i = [ "paddingLeft", "paddingRight", "paddingTop", "paddingBottom", "marginLeft", "marginRight", "marginTop", "marginBottom", "borderLeftWidth", "borderRightWidth", "borderTopWidth", "borderBottomWidth" ], j = i.length, k = !1;
    return f;
}), function(a, b) {
    "use strict";
    "function" == typeof define && define.amd ? define("desandro-matches-selector/matches-selector", b) : "object" == typeof module && module.exports ? module.exports = b() : a.matchesSelector = b();
}(window, function() {
    "use strict";
    var a = function() {
        var a = Element.prototype;
        if (a.matches) return "matches";
        if (a.matchesSelector) return "matchesSelector";
        for (var b = [ "webkit", "moz", "ms", "o" ], c = 0; c < b.length; c++) {
            var d = b[c], e = d + "MatchesSelector";
            if (a[e]) return e;
        }
    }();
    return function(b, c) {
        return b[a](c);
    };
}), function(a, b) {
    "function" == typeof define && define.amd ? define("fizzy-ui-utils/utils", [ "desandro-matches-selector/matches-selector" ], function(c) {
        return b(a, c);
    }) : "object" == typeof module && module.exports ? module.exports = b(a, require("desandro-matches-selector")) : a.fizzyUIUtils = b(a, a.matchesSelector);
}(window, function(a, b) {
    var c = {};
    c.extend = function(a, b) {
        for (var c in b) a[c] = b[c];
        return a;
    }, c.modulo = function(a, b) {
        return (a % b + b) % b;
    }, c.makeArray = function(a) {
        var b = [];
        if (Array.isArray(a)) b = a; else if (a && "number" == typeof a.length) for (var c = 0; c < a.length; c++) b.push(a[c]); else b.push(a);
        return b;
    }, c.removeFrom = function(a, b) {
        var c = a.indexOf(b);
        -1 != c && a.splice(c, 1);
    }, c.getParent = function(a, c) {
        for (;a != document.body; ) if (a = a.parentNode, b(a, c)) return a;
    }, c.getQueryElement = function(a) {
        return "string" == typeof a ? document.querySelector(a) : a;
    }, c.handleEvent = function(a) {
        var b = "on" + a.type;
        this[b] && this[b](a);
    }, c.filterFindElements = function(a, d) {
        a = c.makeArray(a);
        var e = [];
        return a.forEach(function(a) {
            if (a instanceof HTMLElement) {
                if (!d) return void e.push(a);
                b(a, d) && e.push(a);
                for (var c = a.querySelectorAll(d), f = 0; f < c.length; f++) e.push(c[f]);
            }
        }), e;
    }, c.debounceMethod = function(a, b, c) {
        var d = a.prototype[b], e = b + "Timeout";
        a.prototype[b] = function() {
            var a = this[e];
            a && clearTimeout(a);
            var b = arguments, f = this;
            this[e] = setTimeout(function() {
                d.apply(f, b), delete f[e];
            }, c || 100);
        };
    }, c.docReady = function(a) {
        var b = document.readyState;
        "complete" == b || "interactive" == b ? a() : document.addEventListener("DOMContentLoaded", a);
    }, c.toDashed = function(a) {
        return a.replace(/(.)([A-Z])/g, function(a, b, c) {
            return b + "-" + c;
        }).toLowerCase();
    };
    var d = a.console;
    return c.htmlInit = function(b, e) {
        c.docReady(function() {
            var f = c.toDashed(e), g = "data-" + f, h = document.querySelectorAll("[" + g + "]"), i = document.querySelectorAll(".js-" + f), j = c.makeArray(h).concat(c.makeArray(i)), k = g + "-options", l = a.jQuery;
            j.forEach(function(a) {
                var c, f = a.getAttribute(g) || a.getAttribute(k);
                try {
                    c = f && JSON.parse(f);
                } catch (b) {
                    return void (d && d.error("Error parsing " + g + " on " + a.className + ": " + b));
                }
                var h = new b(a, c);
                l && l.data(a, e, h);
            });
        });
    }, c;
}), function(a, b) {
    "function" == typeof define && define.amd ? define("outlayer/item", [ "ev-emitter/ev-emitter", "get-size/get-size" ], b) : "object" == typeof module && module.exports ? module.exports = b(require("ev-emitter"), require("get-size")) : (a.Outlayer = {}, 
    a.Outlayer.Item = b(a.EvEmitter, a.getSize));
}(window, function(a, b) {
    "use strict";
    function c(a) {
        for (var b in a) return !1;
        return null, !0;
    }
    function d(a, b) {
        a && (this.element = a, this.layout = b, this.position = {
            x: 0,
            y: 0
        }, this._create());
    }
    var e = document.documentElement.style, f = "string" == typeof e.transition ? "transition" : "WebkitTransition", g = "string" == typeof e.transform ? "transform" : "WebkitTransform", h = {
        WebkitTransition: "webkitTransitionEnd",
        transition: "transitionend"
    }[f], i = {
        transform: g,
        transition: f,
        transitionDuration: f + "Duration",
        transitionProperty: f + "Property",
        transitionDelay: f + "Delay"
    }, j = d.prototype = Object.create(a.prototype);
    j.constructor = d, j._create = function() {
        this._transn = {
            ingProperties: {},
            clean: {},
            onEnd: {}
        }, this.css({
            position: "absolute"
        });
    }, j.handleEvent = function(a) {
        var b = "on" + a.type;
        this[b] && this[b](a);
    }, j.getSize = function() {
        this.size = b(this.element);
    }, j.css = function(a) {
        var b = this.element.style;
        for (var c in a) {
            b[i[c] || c] = a[c];
        }
    }, j.getPosition = function() {
        var a = getComputedStyle(this.element), b = this.layout._getOption("originLeft"), c = this.layout._getOption("originTop"), d = a[b ? "left" : "right"], e = a[c ? "top" : "bottom"], f = this.layout.size, g = -1 != d.indexOf("%") ? parseFloat(d) / 100 * f.width : parseInt(d, 10), h = -1 != e.indexOf("%") ? parseFloat(e) / 100 * f.height : parseInt(e, 10);
        g = isNaN(g) ? 0 : g, h = isNaN(h) ? 0 : h, g -= b ? f.paddingLeft : f.paddingRight, 
        h -= c ? f.paddingTop : f.paddingBottom, this.position.x = g, this.position.y = h;
    }, j.layoutPosition = function() {
        var a = this.layout.size, b = {}, c = this.layout._getOption("originLeft"), d = this.layout._getOption("originTop"), e = c ? "paddingLeft" : "paddingRight", f = c ? "left" : "right", g = c ? "right" : "left", h = this.position.x + a[e];
        b[f] = this.getXValue(h), b[g] = "";
        var i = d ? "paddingTop" : "paddingBottom", j = d ? "top" : "bottom", k = d ? "bottom" : "top", l = this.position.y + a[i];
        b[j] = this.getYValue(l), b[k] = "", this.css(b), this.emitEvent("layout", [ this ]);
    }, j.getXValue = function(a) {
        var b = this.layout._getOption("horizontal");
        return this.layout.options.percentPosition && !b ? a / this.layout.size.width * 100 + "%" : a + "px";
    }, j.getYValue = function(a) {
        var b = this.layout._getOption("horizontal");
        return this.layout.options.percentPosition && b ? a / this.layout.size.height * 100 + "%" : a + "px";
    }, j._transitionTo = function(a, b) {
        this.getPosition();
        var c = this.position.x, d = this.position.y, e = parseInt(a, 10), f = parseInt(b, 10), g = e === this.position.x && f === this.position.y;
        if (this.setPosition(a, b), g && !this.isTransitioning) return void this.layoutPosition();
        var h = a - c, i = b - d, j = {};
        j.transform = this.getTranslate(h, i), this.transition({
            to: j,
            onTransitionEnd: {
                transform: this.layoutPosition
            },
            isCleaning: !0
        });
    }, j.getTranslate = function(a, b) {
        var c = this.layout._getOption("originLeft"), d = this.layout._getOption("originTop");
        return a = c ? a : -a, b = d ? b : -b, "translate3d(" + a + "px, " + b + "px, 0)";
    }, j.goTo = function(a, b) {
        this.setPosition(a, b), this.layoutPosition();
    }, j.moveTo = j._transitionTo, j.setPosition = function(a, b) {
        this.position.x = parseInt(a, 10), this.position.y = parseInt(b, 10);
    }, j._nonTransition = function(a) {
        this.css(a.to), a.isCleaning && this._removeStyles(a.to);
        for (var b in a.onTransitionEnd) a.onTransitionEnd[b].call(this);
    }, j.transition = function(a) {
        if (!parseFloat(this.layout.options.transitionDuration)) return void this._nonTransition(a);
        var b = this._transn;
        for (var c in a.onTransitionEnd) b.onEnd[c] = a.onTransitionEnd[c];
        for (c in a.to) b.ingProperties[c] = !0, a.isCleaning && (b.clean[c] = !0);
        if (a.from) {
            this.css(a.from);
            this.element.offsetHeight;
            null;
        }
        this.enableTransition(a.to), this.css(a.to), this.isTransitioning = !0;
    };
    var k = "opacity," + function(a) {
        return a.replace(/([A-Z])/g, function(a) {
            return "-" + a.toLowerCase();
        });
    }(g);
    j.enableTransition = function() {
        if (!this.isTransitioning) {
            var a = this.layout.options.transitionDuration;
            a = "number" == typeof a ? a + "ms" : a, this.css({
                transitionProperty: k,
                transitionDuration: a,
                transitionDelay: this.staggerDelay || 0
            }), this.element.addEventListener(h, this, !1);
        }
    }, j.onwebkitTransitionEnd = function(a) {
        this.ontransitionend(a);
    }, j.onotransitionend = function(a) {
        this.ontransitionend(a);
    };
    var l = {
        "-webkit-transform": "transform"
    };
    j.ontransitionend = function(a) {
        if (a.target === this.element) {
            var b = this._transn, d = l[a.propertyName] || a.propertyName;
            if (delete b.ingProperties[d], c(b.ingProperties) && this.disableTransition(), d in b.clean && (this.element.style[a.propertyName] = "", 
            delete b.clean[d]), d in b.onEnd) {
                b.onEnd[d].call(this), delete b.onEnd[d];
            }
            this.emitEvent("transitionEnd", [ this ]);
        }
    }, j.disableTransition = function() {
        this.removeTransitionStyles(), this.element.removeEventListener(h, this, !1), this.isTransitioning = !1;
    }, j._removeStyles = function(a) {
        var b = {};
        for (var c in a) b[c] = "";
        this.css(b);
    };
    var m = {
        transitionProperty: "",
        transitionDuration: "",
        transitionDelay: ""
    };
    return j.removeTransitionStyles = function() {
        this.css(m);
    }, j.stagger = function(a) {
        a = isNaN(a) ? 0 : a, this.staggerDelay = a + "ms";
    }, j.removeElem = function() {
        this.element.parentNode.removeChild(this.element), this.css({
            display: ""
        }), this.emitEvent("remove", [ this ]);
    }, j.remove = function() {
        return f && parseFloat(this.layout.options.transitionDuration) ? (this.once("transitionEnd", function() {
            this.removeElem();
        }), void this.hide()) : void this.removeElem();
    }, j.reveal = function() {
        delete this.isHidden, this.css({
            display: ""
        });
        var a = this.layout.options, b = {};
        b[this.getHideRevealTransitionEndProperty("visibleStyle")] = this.onRevealTransitionEnd, 
        this.transition({
            from: a.hiddenStyle,
            to: a.visibleStyle,
            isCleaning: !0,
            onTransitionEnd: b
        });
    }, j.onRevealTransitionEnd = function() {
        this.isHidden || this.emitEvent("reveal");
    }, j.getHideRevealTransitionEndProperty = function(a) {
        var b = this.layout.options[a];
        if (b.opacity) return "opacity";
        for (var c in b) return c;
    }, j.hide = function() {
        this.isHidden = !0, this.css({
            display: ""
        });
        var a = this.layout.options, b = {};
        b[this.getHideRevealTransitionEndProperty("hiddenStyle")] = this.onHideTransitionEnd, 
        this.transition({
            from: a.visibleStyle,
            to: a.hiddenStyle,
            isCleaning: !0,
            onTransitionEnd: b
        });
    }, j.onHideTransitionEnd = function() {
        this.isHidden && (this.css({
            display: "none"
        }), this.emitEvent("hide"));
    }, j.destroy = function() {
        this.css({
            position: "",
            left: "",
            right: "",
            top: "",
            bottom: "",
            transition: "",
            transform: ""
        });
    }, d;
}), function(a, b) {
    "use strict";
    "function" == typeof define && define.amd ? define("outlayer/outlayer", [ "ev-emitter/ev-emitter", "get-size/get-size", "fizzy-ui-utils/utils", "./item" ], function(c, d, e, f) {
        return b(a, c, d, e, f);
    }) : "object" == typeof module && module.exports ? module.exports = b(a, require("ev-emitter"), require("get-size"), require("fizzy-ui-utils"), require("./item")) : a.Outlayer = b(a, a.EvEmitter, a.getSize, a.fizzyUIUtils, a.Outlayer.Item);
}(window, function(a, b, c, d, e) {
    "use strict";
    function f(a, b) {
        var c = d.getQueryElement(a);
        if (!c) return void (i && i.error("Bad element for " + this.constructor.namespace + ": " + (c || a)));
        this.element = c, j && (this.$element = j(this.element)), this.options = d.extend({}, this.constructor.defaults), 
        this.option(b);
        var e = ++l;
        this.element.outlayerGUID = e, m[e] = this, this._create(), this._getOption("initLayout") && this.layout();
    }
    function g(a) {
        function b() {
            a.apply(this, arguments);
        }
        return b.prototype = Object.create(a.prototype), b.prototype.constructor = b, b;
    }
    function h(a) {
        if ("number" == typeof a) return a;
        var b = a.match(/(^\d*\.?\d*)(\w*)/), c = b && b[1], d = b && b[2];
        return c.length ? (c = parseFloat(c)) * (o[d] || 1) : 0;
    }
    var i = a.console, j = a.jQuery, k = function() {}, l = 0, m = {};
    f.namespace = "outlayer", f.Item = e, f.defaults = {
        containerStyle: {
            position: "relative"
        },
        initLayout: !0,
        originLeft: !0,
        originTop: !0,
        resize: !0,
        resizeContainer: !0,
        transitionDuration: "0.4s",
        hiddenStyle: {
            opacity: 0,
            transform: "scale(0.001)"
        },
        visibleStyle: {
            opacity: 1,
            transform: "scale(1)"
        }
    };
    var n = f.prototype;
    d.extend(n, b.prototype), n.option = function(a) {
        d.extend(this.options, a);
    }, n._getOption = function(a) {
        var b = this.constructor.compatOptions[a];
        return b && void 0 !== this.options[b] ? this.options[b] : this.options[a];
    }, f.compatOptions = {
        initLayout: "isInitLayout",
        horizontal: "isHorizontal",
        layoutInstant: "isLayoutInstant",
        originLeft: "isOriginLeft",
        originTop: "isOriginTop",
        resize: "isResizeBound",
        resizeContainer: "isResizingContainer"
    }, n._create = function() {
        this.reloadItems(), this.stamps = [], this.stamp(this.options.stamp), d.extend(this.element.style, this.options.containerStyle), 
        this._getOption("resize") && this.bindResize();
    }, n.reloadItems = function() {
        this.items = this._itemize(this.element.children);
    }, n._itemize = function(a) {
        for (var b = this._filterFindItemElements(a), c = this.constructor.Item, d = [], e = 0; e < b.length; e++) {
            var f = b[e], g = new c(f, this);
            d.push(g);
        }
        return d;
    }, n._filterFindItemElements = function(a) {
        return d.filterFindElements(a, this.options.itemSelector);
    }, n.getItemElements = function() {
        return this.items.map(function(a) {
            return a.element;
        });
    }, n.layout = function() {
        this._resetLayout(), this._manageStamps();
        var a = this._getOption("layoutInstant"), b = void 0 !== a ? a : !this._isLayoutInited;
        this.layoutItems(this.items, b), this._isLayoutInited = !0;
    }, n._init = n.layout, n._resetLayout = function() {
        this.getSize();
    }, n.getSize = function() {
        this.size = c(this.element);
    }, n._getMeasurement = function(a, b) {
        var d, e = this.options[a];
        e ? ("string" == typeof e ? d = this.element.querySelector(e) : e instanceof HTMLElement && (d = e), 
        this[a] = d ? c(d)[b] : e) : this[a] = 0;
    }, n.layoutItems = function(a, b) {
        a = this._getItemsForLayout(a), this._layoutItems(a, b), this._postLayout();
    }, n._getItemsForLayout = function(a) {
        return a.filter(function(a) {
            return !a.isIgnored;
        });
    }, n._layoutItems = function(a, b) {
        if (this._emitCompleteOnItems("layout", a), a && a.length) {
            var c = [];
            a.forEach(function(a) {
                var d = this._getItemLayoutPosition(a);
                d.item = a, d.isInstant = b || a.isLayoutInstant, c.push(d);
            }, this), this._processLayoutQueue(c);
        }
    }, n._getItemLayoutPosition = function() {
        return {
            x: 0,
            y: 0
        };
    }, n._processLayoutQueue = function(a) {
        this.updateStagger(), a.forEach(function(a, b) {
            this._positionItem(a.item, a.x, a.y, a.isInstant, b);
        }, this);
    }, n.updateStagger = function() {
        var a = this.options.stagger;
        return null === a || void 0 === a ? void (this.stagger = 0) : (this.stagger = h(a), 
        this.stagger);
    }, n._positionItem = function(a, b, c, d, e) {
        d ? a.goTo(b, c) : (a.stagger(e * this.stagger), a.moveTo(b, c));
    }, n._postLayout = function() {
        this.resizeContainer();
    }, n.resizeContainer = function() {
        if (this._getOption("resizeContainer")) {
            var a = this._getContainerSize();
            a && (this._setContainerMeasure(a.width, !0), this._setContainerMeasure(a.height, !1));
        }
    }, n._getContainerSize = k, n._setContainerMeasure = function(a, b) {
        if (void 0 !== a) {
            var c = this.size;
            c.isBorderBox && (a += b ? c.paddingLeft + c.paddingRight + c.borderLeftWidth + c.borderRightWidth : c.paddingBottom + c.paddingTop + c.borderTopWidth + c.borderBottomWidth), 
            a = Math.max(a, 0), this.element.style[b ? "width" : "height"] = a + "px";
        }
    }, n._emitCompleteOnItems = function(a, b) {
        function c() {
            e.dispatchEvent(a + "Complete", null, [ b ]);
        }
        function d() {
            ++g == f && c();
        }
        var e = this, f = b.length;
        if (!b || !f) return void c();
        var g = 0;
        b.forEach(function(b) {
            b.once(a, d);
        });
    }, n.dispatchEvent = function(a, b, c) {
        var d = b ? [ b ].concat(c) : c;
        if (this.emitEvent(a, d), j) if (this.$element = this.$element || j(this.element), 
        b) {
            var e = j.Event(b);
            e.type = a, this.$element.trigger(e, c);
        } else this.$element.trigger(a, c);
    }, n.ignore = function(a) {
        var b = this.getItem(a);
        b && (b.isIgnored = !0);
    }, n.unignore = function(a) {
        var b = this.getItem(a);
        b && delete b.isIgnored;
    }, n.stamp = function(a) {
        (a = this._find(a)) && (this.stamps = this.stamps.concat(a), a.forEach(this.ignore, this));
    }, n.unstamp = function(a) {
        (a = this._find(a)) && a.forEach(function(a) {
            d.removeFrom(this.stamps, a), this.unignore(a);
        }, this);
    }, n._find = function(a) {
        return a ? ("string" == typeof a && (a = this.element.querySelectorAll(a)), a = d.makeArray(a)) : void 0;
    }, n._manageStamps = function() {
        this.stamps && this.stamps.length && (this._getBoundingRect(), this.stamps.forEach(this._manageStamp, this));
    }, n._getBoundingRect = function() {
        var a = this.element.getBoundingClientRect(), b = this.size;
        this._boundingRect = {
            left: a.left + b.paddingLeft + b.borderLeftWidth,
            top: a.top + b.paddingTop + b.borderTopWidth,
            right: a.right - (b.paddingRight + b.borderRightWidth),
            bottom: a.bottom - (b.paddingBottom + b.borderBottomWidth)
        };
    }, n._manageStamp = k, n._getElementOffset = function(a) {
        var b = a.getBoundingClientRect(), d = this._boundingRect, e = c(a);
        return {
            left: b.left - d.left - e.marginLeft,
            top: b.top - d.top - e.marginTop,
            right: d.right - b.right - e.marginRight,
            bottom: d.bottom - b.bottom - e.marginBottom
        };
    }, n.handleEvent = d.handleEvent, n.bindResize = function() {
        a.addEventListener("resize", this), this.isResizeBound = !0;
    }, n.unbindResize = function() {
        a.removeEventListener("resize", this), this.isResizeBound = !1;
    }, n.onresize = function() {
        this.resize();
    }, d.debounceMethod(f, "onresize", 100), n.resize = function() {
        this.isResizeBound && this.needsResizeLayout() && this.layout();
    }, n.needsResizeLayout = function() {
        var a = c(this.element);
        return this.size && a && a.innerWidth !== this.size.innerWidth;
    }, n.addItems = function(a) {
        var b = this._itemize(a);
        return b.length && (this.items = this.items.concat(b)), b;
    }, n.appended = function(a) {
        var b = this.addItems(a);
        b.length && (this.layoutItems(b, !0), this.reveal(b));
    }, n.prepended = function(a) {
        var b = this._itemize(a);
        if (b.length) {
            var c = this.items.slice(0);
            this.items = b.concat(c), this._resetLayout(), this._manageStamps(), this.layoutItems(b, !0), 
            this.reveal(b), this.layoutItems(c);
        }
    }, n.reveal = function(a) {
        if (this._emitCompleteOnItems("reveal", a), a && a.length) {
            var b = this.updateStagger();
            a.forEach(function(a, c) {
                a.stagger(c * b), a.reveal();
            });
        }
    }, n.hide = function(a) {
        if (this._emitCompleteOnItems("hide", a), a && a.length) {
            var b = this.updateStagger();
            a.forEach(function(a, c) {
                a.stagger(c * b), a.hide();
            });
        }
    }, n.revealItemElements = function(a) {
        var b = this.getItems(a);
        this.reveal(b);
    }, n.hideItemElements = function(a) {
        var b = this.getItems(a);
        this.hide(b);
    }, n.getItem = function(a) {
        for (var b = 0; b < this.items.length; b++) {
            var c = this.items[b];
            if (c.element == a) return c;
        }
    }, n.getItems = function(a) {
        a = d.makeArray(a);
        var b = [];
        return a.forEach(function(a) {
            var c = this.getItem(a);
            c && b.push(c);
        }, this), b;
    }, n.remove = function(a) {
        var b = this.getItems(a);
        this._emitCompleteOnItems("remove", b), b && b.length && b.forEach(function(a) {
            a.remove(), d.removeFrom(this.items, a);
        }, this);
    }, n.destroy = function() {
        var a = this.element.style;
        a.height = "", a.position = "", a.width = "", this.items.forEach(function(a) {
            a.destroy();
        }), this.unbindResize();
        var b = this.element.outlayerGUID;
        delete m[b], delete this.element.outlayerGUID, j && j.removeData(this.element, this.constructor.namespace);
    }, f.data = function(a) {
        a = d.getQueryElement(a);
        var b = a && a.outlayerGUID;
        return b && m[b];
    }, f.create = function(a, b) {
        var c = g(f);
        return c.defaults = d.extend({}, f.defaults), d.extend(c.defaults, b), c.compatOptions = d.extend({}, f.compatOptions), 
        c.namespace = a, c.data = f.data, c.Item = g(e), d.htmlInit(c, a), j && j.bridget && j.bridget(a, c), 
        c;
    };
    var o = {
        ms: 1,
        s: 1e3
    };
    return f.Item = e, f;
}), function(a, b) {
    "function" == typeof define && define.amd ? define("isotope/js/item", [ "outlayer/outlayer" ], b) : "object" == typeof module && module.exports ? module.exports = b(require("outlayer")) : (a.Isotope = a.Isotope || {}, 
    a.Isotope.Item = b(a.Outlayer));
}(window, function(a) {
    "use strict";
    function b() {
        a.Item.apply(this, arguments);
    }
    var c = b.prototype = Object.create(a.Item.prototype), d = c._create;
    c._create = function() {
        this.id = this.layout.itemGUID++, d.call(this), this.sortData = {};
    }, c.updateSortData = function() {
        if (!this.isIgnored) {
            this.sortData.id = this.id, this.sortData["original-order"] = this.id, this.sortData.random = Math.random();
            var a = this.layout.options.getSortData, b = this.layout._sorters;
            for (var c in a) {
                var d = b[c];
                this.sortData[c] = d(this.element, this);
            }
        }
    };
    var e = c.destroy;
    return c.destroy = function() {
        e.apply(this, arguments), this.css({
            display: ""
        });
    }, b;
}), function(a, b) {
    "function" == typeof define && define.amd ? define("isotope/js/layout-mode", [ "get-size/get-size", "outlayer/outlayer" ], b) : "object" == typeof module && module.exports ? module.exports = b(require("get-size"), require("outlayer")) : (a.Isotope = a.Isotope || {}, 
    a.Isotope.LayoutMode = b(a.getSize, a.Outlayer));
}(window, function(a, b) {
    "use strict";
    function c(a) {
        this.isotope = a, a && (this.options = a.options[this.namespace], this.element = a.element, 
        this.items = a.filteredItems, this.size = a.size);
    }
    var d = c.prototype;
    return [ "_resetLayout", "_getItemLayoutPosition", "_manageStamp", "_getContainerSize", "_getElementOffset", "needsResizeLayout", "_getOption" ].forEach(function(a) {
        d[a] = function() {
            return b.prototype[a].apply(this.isotope, arguments);
        };
    }), d.needsVerticalResizeLayout = function() {
        var b = a(this.isotope.element);
        return this.isotope.size && b && b.innerHeight != this.isotope.size.innerHeight;
    }, d._getMeasurement = function() {
        this.isotope._getMeasurement.apply(this, arguments);
    }, d.getColumnWidth = function() {
        this.getSegmentSize("column", "Width");
    }, d.getRowHeight = function() {
        this.getSegmentSize("row", "Height");
    }, d.getSegmentSize = function(a, b) {
        var c = a + b, d = "outer" + b;
        if (this._getMeasurement(c, d), !this[c]) {
            var e = this.getFirstItemSize();
            this[c] = e && e[d] || this.isotope.size["inner" + b];
        }
    }, d.getFirstItemSize = function() {
        var b = this.isotope.filteredItems[0];
        return b && b.element && a(b.element);
    }, d.layout = function() {
        this.isotope.layout.apply(this.isotope, arguments);
    }, d.getSize = function() {
        this.isotope.getSize(), this.size = this.isotope.size;
    }, c.modes = {}, c.create = function(a, b) {
        function e() {
            c.apply(this, arguments);
        }
        return e.prototype = Object.create(d), e.prototype.constructor = e, b && (e.options = b), 
        e.prototype.namespace = a, c.modes[a] = e, e;
    }, c;
}), function(a, b) {
    "function" == typeof define && define.amd ? define("masonry/masonry", [ "outlayer/outlayer", "get-size/get-size" ], b) : "object" == typeof module && module.exports ? module.exports = b(require("outlayer"), require("get-size")) : a.Masonry = b(a.Outlayer, a.getSize);
}(window, function(a, b) {
    var c = a.create("masonry");
    return c.compatOptions.fitWidth = "isFitWidth", c.prototype._resetLayout = function() {
        this.getSize(), this._getMeasurement("columnWidth", "outerWidth"), this._getMeasurement("gutter", "outerWidth"), 
        this.measureColumns(), this.colYs = [];
        for (var a = 0; a < this.cols; a++) this.colYs.push(0);
        this.maxY = 0;
    }, c.prototype.measureColumns = function() {
        if (this.getContainerWidth(), !this.columnWidth) {
            var a = this.items[0], c = a && a.element;
            this.columnWidth = c && b(c).outerWidth || this.containerWidth;
        }
        var d = this.columnWidth += this.gutter, e = this.containerWidth + this.gutter, f = e / d, g = d - e % d, h = g && 1 > g ? "round" : "floor";
        f = Math[h](f), this.cols = Math.max(f, 1);
    }, c.prototype.getContainerWidth = function() {
        var a = this._getOption("fitWidth"), c = a ? this.element.parentNode : this.element, d = b(c);
        this.containerWidth = d && d.innerWidth;
    }, c.prototype._getItemLayoutPosition = function(a) {
        a.getSize();
        var b = a.size.outerWidth % this.columnWidth, c = b && 1 > b ? "round" : "ceil", d = Math[c](a.size.outerWidth / this.columnWidth);
        d = Math.min(d, this.cols);
        for (var e = this._getColGroup(d), f = Math.min.apply(Math, e), g = e.indexOf(f), h = {
            x: this.columnWidth * g,
            y: f
        }, i = f + a.size.outerHeight, j = this.cols + 1 - e.length, k = 0; j > k; k++) this.colYs[g + k] = i;
        return h;
    }, c.prototype._getColGroup = function(a) {
        if (2 > a) return this.colYs;
        for (var b = [], c = this.cols + 1 - a, d = 0; c > d; d++) {
            var e = this.colYs.slice(d, d + a);
            b[d] = Math.max.apply(Math, e);
        }
        return b;
    }, c.prototype._manageStamp = function(a) {
        var c = b(a), d = this._getElementOffset(a), e = this._getOption("originLeft"), f = e ? d.left : d.right, g = f + c.outerWidth, h = Math.floor(f / this.columnWidth);
        h = Math.max(0, h);
        var i = Math.floor(g / this.columnWidth);
        i -= g % this.columnWidth ? 0 : 1, i = Math.min(this.cols - 1, i);
        for (var j = this._getOption("originTop"), k = (j ? d.top : d.bottom) + c.outerHeight, l = h; i >= l; l++) this.colYs[l] = Math.max(k, this.colYs[l]);
    }, c.prototype._getContainerSize = function() {
        this.maxY = Math.max.apply(Math, this.colYs);
        var a = {
            height: this.maxY
        };
        return this._getOption("fitWidth") && (a.width = this._getContainerFitWidth()), 
        a;
    }, c.prototype._getContainerFitWidth = function() {
        for (var a = 0, b = this.cols; --b && 0 === this.colYs[b]; ) a++;
        return (this.cols - a) * this.columnWidth - this.gutter;
    }, c.prototype.needsResizeLayout = function() {
        var a = this.containerWidth;
        return this.getContainerWidth(), a != this.containerWidth;
    }, c;
}), function(a, b) {
    "function" == typeof define && define.amd ? define("isotope/js/layout-modes/masonry", [ "../layout-mode", "masonry/masonry" ], b) : "object" == typeof module && module.exports ? module.exports = b(require("../layout-mode"), require("masonry-layout")) : b(a.Isotope.LayoutMode, a.Masonry);
}(window, function(a, b) {
    "use strict";
    var c = a.create("masonry"), d = c.prototype, e = {
        _getElementOffset: !0,
        layout: !0,
        _getMeasurement: !0
    };
    for (var f in b.prototype) e[f] || (d[f] = b.prototype[f]);
    var g = d.measureColumns;
    d.measureColumns = function() {
        this.items = this.isotope.filteredItems, g.call(this);
    };
    var h = d._getOption;
    return d._getOption = function(a) {
        return "fitWidth" == a ? void 0 !== this.options.isFitWidth ? this.options.isFitWidth : this.options.fitWidth : h.apply(this.isotope, arguments);
    }, c;
}), function(a, b) {
    "function" == typeof define && define.amd ? define("isotope/js/layout-modes/fit-rows", [ "../layout-mode" ], b) : "object" == typeof exports ? module.exports = b(require("../layout-mode")) : b(a.Isotope.LayoutMode);
}(window, function(a) {
    "use strict";
    var b = a.create("fitRows"), c = b.prototype;
    return c._resetLayout = function() {
        this.x = 0, this.y = 0, this.maxY = 0, this._getMeasurement("gutter", "outerWidth");
    }, c._getItemLayoutPosition = function(a) {
        a.getSize();
        var b = a.size.outerWidth + this.gutter, c = this.isotope.size.innerWidth + this.gutter;
        0 !== this.x && b + this.x > c && (this.x = 0, this.y = this.maxY);
        var d = {
            x: this.x,
            y: this.y
        };
        return this.maxY = Math.max(this.maxY, this.y + a.size.outerHeight), this.x += b, 
        d;
    }, c._getContainerSize = function() {
        return {
            height: this.maxY
        };
    }, b;
}), function(a, b) {
    "function" == typeof define && define.amd ? define("isotope/js/layout-modes/vertical", [ "../layout-mode" ], b) : "object" == typeof module && module.exports ? module.exports = b(require("../layout-mode")) : b(a.Isotope.LayoutMode);
}(window, function(a) {
    "use strict";
    var b = a.create("vertical", {
        horizontalAlignment: 0
    }), c = b.prototype;
    return c._resetLayout = function() {
        this.y = 0;
    }, c._getItemLayoutPosition = function(a) {
        a.getSize();
        var b = (this.isotope.size.innerWidth - a.size.outerWidth) * this.options.horizontalAlignment, c = this.y;
        return this.y += a.size.outerHeight, {
            x: b,
            y: c
        };
    }, c._getContainerSize = function() {
        return {
            height: this.y
        };
    }, b;
}), function(a, b) {
    "function" == typeof define && define.amd ? define([ "outlayer/outlayer", "get-size/get-size", "desandro-matches-selector/matches-selector", "fizzy-ui-utils/utils", "isotope/js/item", "isotope/js/layout-mode", "isotope/js/layout-modes/masonry", "isotope/js/layout-modes/fit-rows", "isotope/js/layout-modes/vertical" ], function(c, d, e, f, g, h) {
        return b(a, c, d, e, f, g, h);
    }) : "object" == typeof module && module.exports ? module.exports = b(a, require("outlayer"), require("get-size"), require("desandro-matches-selector"), require("fizzy-ui-utils"), require("isotope/js/item"), require("isotope/js/layout-mode"), require("isotope/js/layout-modes/masonry"), require("isotope/js/layout-modes/fit-rows"), require("isotope/js/layout-modes/vertical")) : a.Isotope = b(a, a.Outlayer, a.getSize, a.matchesSelector, a.fizzyUIUtils, a.Isotope.Item, a.Isotope.LayoutMode);
}(window, function(a, b, c, d, e, f, g) {
    function h(a, b) {
        return function(c, d) {
            for (var e = 0; e < a.length; e++) {
                var f = a[e], g = c.sortData[f], h = d.sortData[f];
                if (g > h || h > g) {
                    var i = void 0 !== b[f] ? b[f] : b, j = i ? 1 : -1;
                    return (g > h ? 1 : -1) * j;
                }
            }
            return 0;
        };
    }
    var i = a.jQuery, j = String.prototype.trim ? function(a) {
        return a.trim();
    } : function(a) {
        return a.replace(/^\s+|\s+$/g, "");
    }, k = b.create("isotope", {
        layoutMode: "masonry",
        isJQueryFiltering: !0,
        sortAscending: !0
    });
    k.Item = f, k.LayoutMode = g;
    var l = k.prototype;
    l._create = function() {
        this.itemGUID = 0, this._sorters = {}, this._getSorters(), b.prototype._create.call(this), 
        this.modes = {}, this.filteredItems = this.items, this.sortHistory = [ "original-order" ];
        for (var a in g.modes) this._initLayoutMode(a);
    }, l.reloadItems = function() {
        this.itemGUID = 0, b.prototype.reloadItems.call(this);
    }, l._itemize = function() {
        for (var a = b.prototype._itemize.apply(this, arguments), c = 0; c < a.length; c++) {
            a[c].id = this.itemGUID++;
        }
        return this._updateItemsSortData(a), a;
    }, l._initLayoutMode = function(a) {
        var b = g.modes[a], c = this.options[a] || {};
        this.options[a] = b.options ? e.extend(b.options, c) : c, this.modes[a] = new b(this);
    }, l.layout = function() {
        return !this._isLayoutInited && this._getOption("initLayout") ? void this.arrange() : void this._layout();
    }, l._layout = function() {
        var a = this._getIsInstant();
        this._resetLayout(), this._manageStamps(), this.layoutItems(this.filteredItems, a), 
        this._isLayoutInited = !0;
    }, l.arrange = function(a) {
        this.option(a), this._getIsInstant();
        var b = this._filter(this.items);
        this.filteredItems = b.matches, this._bindArrangeComplete(), this._isInstant ? this._noTransition(this._hideReveal, [ b ]) : this._hideReveal(b), 
        this._sort(), this._layout();
    }, l._init = l.arrange, l._hideReveal = function(a) {
        this.reveal(a.needReveal), this.hide(a.needHide);
    }, l._getIsInstant = function() {
        var a = this._getOption("layoutInstant"), b = void 0 !== a ? a : !this._isLayoutInited;
        return this._isInstant = b, b;
    }, l._bindArrangeComplete = function() {
        function a() {
            b && c && d && e.dispatchEvent("arrangeComplete", null, [ e.filteredItems ]);
        }
        var b, c, d, e = this;
        this.once("layoutComplete", function() {
            b = !0, a();
        }), this.once("hideComplete", function() {
            c = !0, a();
        }), this.once("revealComplete", function() {
            d = !0, a();
        });
    }, l._filter = function(a) {
        var b = this.options.filter;
        b = b || "*";
        for (var c = [], d = [], e = [], f = this._getFilterTest(b), g = 0; g < a.length; g++) {
            var h = a[g];
            if (!h.isIgnored) {
                var i = f(h);
                i && c.push(h), i && h.isHidden ? d.push(h) : i || h.isHidden || e.push(h);
            }
        }
        return {
            matches: c,
            needReveal: d,
            needHide: e
        };
    }, l._getFilterTest = function(a) {
        return i && this.options.isJQueryFiltering ? function(b) {
            return i(b.element).is(a);
        } : "function" == typeof a ? function(b) {
            return a(b.element);
        } : function(b) {
            return d(b.element, a);
        };
    }, l.updateSortData = function(a) {
        var b;
        a ? (a = e.makeArray(a), b = this.getItems(a)) : b = this.items, this._getSorters(), 
        this._updateItemsSortData(b);
    }, l._getSorters = function() {
        var a = this.options.getSortData;
        for (var b in a) {
            var c = a[b];
            this._sorters[b] = m(c);
        }
    }, l._updateItemsSortData = function(a) {
        for (var b = a && a.length, c = 0; b && b > c; c++) {
            a[c].updateSortData();
        }
    };
    var m = function() {
        function a(a) {
            if ("string" != typeof a) return a;
            var c = j(a).split(" "), d = c[0], e = d.match(/^\[(.+)\]$/), f = e && e[1], g = b(f, d), h = k.sortDataParsers[c[1]];
            return a = h ? function(a) {
                return a && h(g(a));
            } : function(a) {
                return a && g(a);
            };
        }
        function b(a, b) {
            return a ? function(b) {
                return b.getAttribute(a);
            } : function(a) {
                var c = a.querySelector(b);
                return c && c.textContent;
            };
        }
        return a;
    }();
    k.sortDataParsers = {
        parseInt: function(a) {
            return parseInt(a, 10);
        },
        parseFloat: function(a) {
            return parseFloat(a);
        }
    }, l._sort = function() {
        var a = this.options.sortBy;
        if (a) {
            var b = [].concat.apply(a, this.sortHistory), c = h(b, this.options.sortAscending);
            this.filteredItems.sort(c), a != this.sortHistory[0] && this.sortHistory.unshift(a);
        }
    }, l._mode = function() {
        var a = this.options.layoutMode, b = this.modes[a];
        if (!b) throw new Error("No layout mode: " + a);
        return b.options = this.options[a], b;
    }, l._resetLayout = function() {
        b.prototype._resetLayout.call(this), this._mode()._resetLayout();
    }, l._getItemLayoutPosition = function(a) {
        return this._mode()._getItemLayoutPosition(a);
    }, l._manageStamp = function(a) {
        this._mode()._manageStamp(a);
    }, l._getContainerSize = function() {
        return this._mode()._getContainerSize();
    }, l.needsResizeLayout = function() {
        return this._mode().needsResizeLayout();
    }, l.appended = function(a) {
        var b = this.addItems(a);
        if (b.length) {
            var c = this._filterRevealAdded(b);
            this.filteredItems = this.filteredItems.concat(c);
        }
    }, l.prepended = function(a) {
        var b = this._itemize(a);
        if (b.length) {
            this._resetLayout(), this._manageStamps();
            var c = this._filterRevealAdded(b);
            this.layoutItems(this.filteredItems), this.filteredItems = c.concat(this.filteredItems), 
            this.items = b.concat(this.items);
        }
    }, l._filterRevealAdded = function(a) {
        var b = this._filter(a);
        return this.hide(b.needHide), this.reveal(b.matches), this.layoutItems(b.matches, !0), 
        b.matches;
    }, l.insert = function(a) {
        var b = this.addItems(a);
        if (b.length) {
            var c, d, e = b.length;
            for (c = 0; e > c; c++) d = b[c], this.element.appendChild(d.element);
            var f = this._filter(b).matches;
            for (c = 0; e > c; c++) b[c].isLayoutInstant = !0;
            for (this.arrange(), c = 0; e > c; c++) delete b[c].isLayoutInstant;
            this.reveal(f);
        }
    };
    var n = l.remove;
    return l.remove = function(a) {
        a = e.makeArray(a);
        var b = this.getItems(a);
        n.call(this, a);
        for (var c = b && b.length, d = 0; c && c > d; d++) {
            var f = b[d];
            e.removeFrom(this.filteredItems, f);
        }
    }, l.shuffle = function() {
        for (var a = 0; a < this.items.length; a++) {
            this.items[a].sortData.random = Math.random();
        }
        this.options.sortBy = "random", this._sort(), this._layout();
    }, l._noTransition = function(a, b) {
        var c = this.options.transitionDuration;
        this.options.transitionDuration = 0;
        var d = a.apply(this, b);
        return this.options.transitionDuration = c, d;
    }, l.getFilteredItemElements = function() {
        return this.filteredItems.map(function(a) {
            return a.element;
        });
    }, k;
}), function(a) {
    var b = {}, c = {
        mode: "horizontal",
        slideSelector: "",
        infiniteLoop: !0,
        hideControlOnEnd: !1,
        speed: 500,
        easing: null,
        slideMargin: 0,
        startSlide: 0,
        randomStart: !1,
        captions: !1,
        ticker: !1,
        tickerHover: !1,
        adaptiveHeight: !1,
        adaptiveHeightSpeed: 500,
        video: !1,
        useCSS: !0,
        preloadImages: "visible",
        responsive: !0,
        slideZIndex: 50,
        touchEnabled: !0,
        swipeThreshold: 50,
        oneToOneTouch: !0,
        preventDefaultSwipeX: !0,
        preventDefaultSwipeY: !1,
        pager: !0,
        pagerType: "full",
        pagerShortSeparator: " / ",
        pagerSelector: null,
        buildPager: null,
        pagerCustom: null,
        controls: !0,
        nextText: "Next",
        prevText: "Prev",
        nextSelector: null,
        prevSelector: null,
        autoControls: !1,
        startText: "Start",
        stopText: "Stop",
        autoControlsCombine: !1,
        autoControlsSelector: null,
        auto: !1,
        pause: 4e3,
        autoStart: !0,
        autoDirection: "next",
        autoHover: !1,
        autoDelay: 0,
        minSlides: 1,
        maxSlides: 1,
        moveSlides: 0,
        slideWidth: 0,
        onSliderLoad: function() {},
        onSlideBefore: function() {},
        onSlideAfter: function() {},
        onSlideNext: function() {},
        onSlidePrev: function() {},
        onSliderResize: function() {}
    };
    a.fn.bxSlider = function(d) {
        if (0 == this.length) return this;
        if (this.length > 1) return this.each(function() {
            a(this).bxSlider(d);
        }), this;
        var e = {}, f = this;
        b.el = this;
        var g = a(window).width(), h = a(window).height(), j = function() {
            e.settings = a.extend({}, c, d), e.settings.slideWidth = parseInt(e.settings.slideWidth), 
            e.children = f.children(e.settings.slideSelector), e.children.length < e.settings.minSlides && (e.settings.minSlides = e.children.length), 
            e.children.length < e.settings.maxSlides && (e.settings.maxSlides = e.children.length), 
            e.settings.randomStart && (e.settings.startSlide = Math.floor(Math.random() * e.children.length)), 
            e.active = {
                index: e.settings.startSlide
            }, e.carousel = e.settings.minSlides > 1 || e.settings.maxSlides > 1, e.carousel && (e.settings.preloadImages = "all"), 
            e.minThreshold = e.settings.minSlides * e.settings.slideWidth + (e.settings.minSlides - 1) * e.settings.slideMargin, 
            e.maxThreshold = e.settings.maxSlides * e.settings.slideWidth + (e.settings.maxSlides - 1) * e.settings.slideMargin, 
            e.working = !1, e.controls = {}, e.interval = null, e.animProp = "vertical" == e.settings.mode ? "top" : "left", 
            e.usingCSS = e.settings.useCSS && "fade" != e.settings.mode && function() {
                var a = document.createElement("div"), b = [ "WebkitPerspective", "MozPerspective", "OPerspective", "msPerspective" ];
                for (var c in b) if (void 0 !== a.style[b[c]]) return e.cssPrefix = b[c].replace("Perspective", "").toLowerCase(), 
                e.animProp = "-" + e.cssPrefix + "-transform", !0;
                return !1;
            }(), "vertical" == e.settings.mode && (e.settings.maxSlides = e.settings.minSlides), 
            f.data("origStyle", f.attr("style")), f.children(e.settings.slideSelector).each(function() {
                a(this).data("origStyle", a(this).attr("style"));
            }), k();
        }, k = function() {
            f.wrap('<div class="bx-wrapper"><div class="bx-viewport"></div></div>'), e.viewport = f.parent(), 
            e.loader = a('<div class="bx-loading" />'), e.viewport.prepend(e.loader), f.css({
                width: "horizontal" == e.settings.mode ? 100 * e.children.length + 215 + "%" : "auto",
                position: "relative"
            }), e.usingCSS && e.settings.easing ? f.css("-" + e.cssPrefix + "-transition-timing-function", e.settings.easing) : e.settings.easing || (e.settings.easing = "swing"), 
            q(), e.viewport.css({
                width: "100%",
                overflow: "hidden",
                position: "relative"
            }), e.viewport.parent().css({
                maxWidth: o()
            }), e.settings.pager || e.viewport.parent().css({
                margin: "0 auto 0px"
            }), e.children.css({
                float: "horizontal" == e.settings.mode ? "left" : "none",
                listStyle: "none",
                position: "relative"
            }), e.children.css("width", p()), "horizontal" == e.settings.mode && e.settings.slideMargin > 0 && e.children.css("marginRight", e.settings.slideMargin), 
            "vertical" == e.settings.mode && e.settings.slideMargin > 0 && e.children.css("marginBottom", e.settings.slideMargin), 
            "fade" == e.settings.mode && (e.children.css({
                position: "absolute",
                zIndex: 0,
                display: "none"
            }), e.children.eq(e.settings.startSlide).css({
                zIndex: e.settings.slideZIndex,
                display: "block"
            })), e.controls.el = a('<div class="bx-controls" />'), e.settings.captions && z(), 
            e.active.last = e.settings.startSlide == r() - 1, e.settings.video && f.fitVids();
            var b = e.children.eq(e.settings.startSlide);
            "all" == e.settings.preloadImages && (b = e.children), e.settings.ticker ? e.settings.pager = !1 : (e.settings.pager && w(), 
            e.settings.controls && x(), e.settings.auto && e.settings.autoControls && y(), (e.settings.controls || e.settings.autoControls || e.settings.pager) && e.viewport.after(e.controls.el)), 
            l(b, m);
        }, l = function(b, c) {
            var d = b.find("img, iframe").length;
            if (0 == d) return void c();
            var e = 0;
            b.find("img, iframe").each(function() {
                a(this).one("load", function() {
                    ++e == d && c();
                }).each(function() {
                    this.complete && a(this).load();
                });
            });
        }, m = function() {
            if (e.settings.infiniteLoop && "fade" != e.settings.mode && !e.settings.ticker) {
                var b = "vertical" == e.settings.mode ? e.settings.minSlides : e.settings.maxSlides, c = e.children.slice(0, b).clone().addClass("bx-clone"), d = e.children.slice(-b).clone().addClass("bx-clone");
                f.append(c).prepend(d);
            }
            e.loader.remove(), t(), "vertical" == e.settings.mode && (e.settings.adaptiveHeight = !0), 
            e.viewport.height(n()), f.redrawSlider(), e.settings.onSliderLoad(e.active.index), 
            e.initialized = !0, e.settings.responsive && a(window).bind("resize", Q), e.settings.auto && e.settings.autoStart && J(), 
            e.settings.ticker && K(), e.settings.pager && F(e.settings.startSlide), e.settings.controls && I(), 
            e.settings.touchEnabled && !e.settings.ticker && M();
        }, n = function() {
            var b = 0, c = a();
            if ("vertical" == e.settings.mode || e.settings.adaptiveHeight) if (e.carousel) {
                var d = 1 == e.settings.moveSlides ? e.active.index : e.active.index * s();
                for (c = e.children.eq(d), i = 1; i <= e.settings.maxSlides - 1; i++) c = d + i >= e.children.length ? c.add(e.children.eq(i - 1)) : c.add(e.children.eq(d + i));
            } else c = e.children.eq(e.active.index); else c = e.children;
            return "vertical" == e.settings.mode ? (c.each(function() {
                b += a(this).outerHeight();
            }), e.settings.slideMargin > 0 && (b += e.settings.slideMargin * (e.settings.minSlides - 1))) : b = Math.max.apply(Math, c.map(function() {
                return a(this).outerHeight(!1);
            }).get()), b;
        }, o = function() {
            var a = "100%";
            return e.settings.slideWidth > 0 && (a = "horizontal" == e.settings.mode ? e.settings.maxSlides * e.settings.slideWidth + (e.settings.maxSlides - 1) * e.settings.slideMargin : e.settings.slideWidth), 
            a;
        }, p = function() {
            var a = e.settings.slideWidth, b = e.viewport.width();
            return 0 == e.settings.slideWidth || e.settings.slideWidth > b && !e.carousel || "vertical" == e.settings.mode ? a = b : e.settings.maxSlides > 1 && "horizontal" == e.settings.mode && (b > e.maxThreshold || b < e.minThreshold && (a = (b - e.settings.slideMargin * (e.settings.minSlides - 1)) / e.settings.minSlides)), 
            a;
        }, q = function() {
            var a = 1;
            if ("horizontal" == e.settings.mode && e.settings.slideWidth > 0) if (e.viewport.width() < e.minThreshold) a = e.settings.minSlides; else if (e.viewport.width() > e.maxThreshold) a = e.settings.maxSlides; else {
                var b = e.children.first().width();
                a = Math.floor(e.viewport.width() / b);
            } else "vertical" == e.settings.mode && (a = e.settings.minSlides);
            return a;
        }, r = function() {
            var a = 0;
            if (e.settings.moveSlides > 0) if (e.settings.infiniteLoop) a = e.children.length / s(); else for (var b = 0, c = 0; b < e.children.length; ) ++a, 
            b = c + q(), c += e.settings.moveSlides <= q() ? e.settings.moveSlides : q(); else a = Math.ceil(e.children.length / q());
            return a;
        }, s = function() {
            return e.settings.moveSlides > 0 && e.settings.moveSlides <= q() ? e.settings.moveSlides : q();
        }, t = function() {
            if (e.children.length > e.settings.maxSlides && e.active.last && !e.settings.infiniteLoop) {
                if ("horizontal" == e.settings.mode) {
                    var a = e.children.last(), b = a.position();
                    u(-(b.left - (e.viewport.width() - a.width())), "reset", 0);
                } else if ("vertical" == e.settings.mode) {
                    var c = e.children.length - e.settings.minSlides, b = e.children.eq(c).position();
                    u(-b.top, "reset", 0);
                }
            } else {
                var b = e.children.eq(e.active.index * s()).position();
                e.active.index == r() - 1 && (e.active.last = !0), void 0 != b && ("horizontal" == e.settings.mode ? u(-b.left, "reset", 0) : "vertical" == e.settings.mode && u(-b.top, "reset", 0));
            }
        }, u = function(a, b, c, d) {
            if (e.usingCSS) {
                var g = "vertical" == e.settings.mode ? "translate3d(0, " + a + "px, 0)" : "translate3d(" + a + "px, 0, 0)";
                f.css("-" + e.cssPrefix + "-transition-duration", c / 1e3 + "s"), "slide" == b ? (f.css(e.animProp, g), 
                f.bind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd", function() {
                    f.unbind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd"), G();
                })) : "reset" == b ? f.css(e.animProp, g) : "ticker" == b && (f.css("-" + e.cssPrefix + "-transition-timing-function", "linear"), 
                f.css(e.animProp, g), f.bind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd", function() {
                    f.unbind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd"), u(d.resetValue, "reset", 0), 
                    L();
                }));
            } else {
                var h = {};
                h[e.animProp] = a, "slide" == b ? f.animate(h, c, e.settings.easing, function() {
                    G();
                }) : "reset" == b ? f.css(e.animProp, a) : "ticker" == b && f.animate(h, speed, "linear", function() {
                    u(d.resetValue, "reset", 0), L();
                });
            }
        }, v = function() {
            for (var b = "", c = r(), d = 0; c > d; d++) {
                var f = "";
                e.settings.buildPager && a.isFunction(e.settings.buildPager) ? (f = e.settings.buildPager(d), 
                e.pagerEl.addClass("bx-custom-pager")) : (f = d + 1, e.pagerEl.addClass("bx-default-pager")), 
                b += '<div class="bx-pager-item"><a href="" data-slide-index="' + d + '" class="bx-pager-link">' + f + "</a></div>";
            }
            e.pagerEl.html(b);
        }, w = function() {
            e.settings.pagerCustom ? e.pagerEl = a(e.settings.pagerCustom) : (e.pagerEl = a('<div class="bx-pager" />'), 
            e.settings.pagerSelector ? a(e.settings.pagerSelector).html(e.pagerEl) : e.controls.el.addClass("bx-has-pager").append(e.pagerEl), 
            v()), e.pagerEl.on("click", "a", E);
        }, x = function() {
            e.controls.next = a('<a class="bx-next" href="">' + e.settings.nextText + "</a>"), 
            e.controls.prev = a('<a class="bx-prev" href="">' + e.settings.prevText + "</a>"), 
            e.controls.next.bind("click", A), e.controls.prev.bind("click", B), e.settings.nextSelector && a(e.settings.nextSelector).append(e.controls.next), 
            e.settings.prevSelector && a(e.settings.prevSelector).append(e.controls.prev), e.settings.nextSelector || e.settings.prevSelector || (e.controls.directionEl = a('<div class="bx-controls-direction" />'), 
            e.controls.directionEl.append(e.controls.prev).append(e.controls.next), e.controls.el.addClass("bx-has-controls-direction").append(e.controls.directionEl));
        }, y = function() {
            e.controls.start = a('<div class="bx-controls-auto-item"><a class="bx-start" href="">' + e.settings.startText + "</a></div>"), 
            e.controls.stop = a('<div class="bx-controls-auto-item"><a class="bx-stop" href="">' + e.settings.stopText + "</a></div>"), 
            e.controls.autoEl = a('<div class="bx-controls-auto" />'), e.controls.autoEl.on("click", ".bx-start", C), 
            e.controls.autoEl.on("click", ".bx-stop", D), e.settings.autoControlsCombine ? e.controls.autoEl.append(e.controls.start) : e.controls.autoEl.append(e.controls.start).append(e.controls.stop), 
            e.settings.autoControlsSelector ? a(e.settings.autoControlsSelector).html(e.controls.autoEl) : e.controls.el.addClass("bx-has-controls-auto").append(e.controls.autoEl), 
            H(e.settings.autoStart ? "stop" : "start");
        }, z = function() {
            e.children.each(function() {
                var b = a(this).find("img:first").attr("title");
                void 0 != b && ("" + b).length && a(this).append('<div class="bx-caption"><span>' + b + "</span></div>");
            });
        }, A = function(a) {
            e.settings.auto && f.stopAuto(), f.goToNextSlide(), a.preventDefault();
        }, B = function(a) {
            e.settings.auto && f.stopAuto(), f.goToPrevSlide(), a.preventDefault();
        }, C = function(a) {
            f.startAuto(), a.preventDefault();
        }, D = function(a) {
            f.stopAuto(), a.preventDefault();
        }, E = function(b) {
            e.settings.auto && f.stopAuto();
            var c = a(b.currentTarget), d = parseInt(c.attr("data-slide-index"));
            d != e.active.index && f.goToSlide(d), b.preventDefault();
        }, F = function(b) {
            var c = e.children.length;
            return "short" == e.settings.pagerType ? (e.settings.maxSlides > 1 && (c = Math.ceil(e.children.length / e.settings.maxSlides)), 
            void e.pagerEl.html(b + 1 + e.settings.pagerShortSeparator + c)) : (e.pagerEl.find("a").removeClass("active"), 
            void e.pagerEl.each(function(c, d) {
                a(d).find("a").eq(b).addClass("active");
            }));
        }, G = function() {
            if (e.settings.infiniteLoop) {
                var a = "";
                0 == e.active.index ? a = e.children.eq(0).position() : e.active.index == r() - 1 && e.carousel ? a = e.children.eq((r() - 1) * s()).position() : e.active.index == e.children.length - 1 && (a = e.children.eq(e.children.length - 1).position()), 
                a && ("horizontal" == e.settings.mode ? u(-a.left, "reset", 0) : "vertical" == e.settings.mode && u(-a.top, "reset", 0));
            }
            e.working = !1, e.settings.onSlideAfter(e.children.eq(e.active.index), e.oldIndex, e.active.index);
        }, H = function(a) {
            e.settings.autoControlsCombine ? e.controls.autoEl.html(e.controls[a]) : (e.controls.autoEl.find("a").removeClass("active"), 
            e.controls.autoEl.find("a:not(.bx-" + a + ")").addClass("active"));
        }, I = function() {
            1 == r() ? (e.controls.prev.addClass("disabled"), e.controls.next.addClass("disabled")) : !e.settings.infiniteLoop && e.settings.hideControlOnEnd && (0 == e.active.index ? (e.controls.prev.addClass("disabled"), 
            e.controls.next.removeClass("disabled")) : e.active.index == r() - 1 ? (e.controls.next.addClass("disabled"), 
            e.controls.prev.removeClass("disabled")) : (e.controls.prev.removeClass("disabled"), 
            e.controls.next.removeClass("disabled")));
        }, J = function() {
            e.settings.autoDelay > 0 ? setTimeout(f.startAuto, e.settings.autoDelay) : f.startAuto(), 
            e.settings.autoHover && f.hover(function() {
                e.interval && (f.stopAuto(!0), e.autoPaused = !0);
            }, function() {
                e.autoPaused && (f.startAuto(!0), e.autoPaused = null);
            });
        }, K = function() {
            var b = 0;
            if ("next" == e.settings.autoDirection) f.append(e.children.clone().addClass("bx-clone")); else {
                f.prepend(e.children.clone().addClass("bx-clone"));
                var c = e.children.first().position();
                b = "horizontal" == e.settings.mode ? -c.left : -c.top;
            }
            u(b, "reset", 0), e.settings.pager = !1, e.settings.controls = !1, e.settings.autoControls = !1, 
            e.settings.tickerHover && !e.usingCSS && e.viewport.hover(function() {
                f.stop();
            }, function() {
                var b = 0;
                e.children.each(function() {
                    b += "horizontal" == e.settings.mode ? a(this).outerWidth(!0) : a(this).outerHeight(!0);
                });
                var c = e.settings.speed / b, d = "horizontal" == e.settings.mode ? "left" : "top", g = c * (b - Math.abs(parseInt(f.css(d))));
                L(g);
            }), L();
        }, L = function(a) {
            speed = a || e.settings.speed;
            var b = {
                left: 0,
                top: 0
            }, c = {
                left: 0,
                top: 0
            };
            "next" == e.settings.autoDirection ? b = f.find(".bx-clone").first().position() : c = e.children.first().position();
            var d = "horizontal" == e.settings.mode ? -b.left : -b.top, g = "horizontal" == e.settings.mode ? -c.left : -c.top, h = {
                resetValue: g
            };
            u(d, "ticker", speed, h);
        }, M = function() {
            e.touch = {
                start: {
                    x: 0,
                    y: 0
                },
                end: {
                    x: 0,
                    y: 0
                }
            }, e.viewport.bind("touchstart", N);
        }, N = function(a) {
            if (e.working) a.preventDefault(); else {
                e.touch.originalPos = f.position();
                var b = a.originalEvent;
                e.touch.start.x = b.changedTouches[0].pageX, e.touch.start.y = b.changedTouches[0].pageY, 
                e.viewport.bind("touchmove", O), e.viewport.bind("touchend", P);
            }
        }, O = function(a) {
            var b = a.originalEvent, c = Math.abs(b.changedTouches[0].pageX - e.touch.start.x), d = Math.abs(b.changedTouches[0].pageY - e.touch.start.y);
            if (3 * c > d && e.settings.preventDefaultSwipeX ? a.preventDefault() : 3 * d > c && e.settings.preventDefaultSwipeY && a.preventDefault(), 
            "fade" != e.settings.mode && e.settings.oneToOneTouch) {
                var f = 0;
                if ("horizontal" == e.settings.mode) {
                    var g = b.changedTouches[0].pageX - e.touch.start.x;
                    f = e.touch.originalPos.left + g;
                } else {
                    var g = b.changedTouches[0].pageY - e.touch.start.y;
                    f = e.touch.originalPos.top + g;
                }
                u(f, "reset", 0);
            }
        }, P = function(a) {
            e.viewport.unbind("touchmove", O);
            var b = a.originalEvent, c = 0;
            if (e.touch.end.x = b.changedTouches[0].pageX, e.touch.end.y = b.changedTouches[0].pageY, 
            "fade" == e.settings.mode) {
                var d = Math.abs(e.touch.start.x - e.touch.end.x);
                d >= e.settings.swipeThreshold && (e.touch.start.x > e.touch.end.x ? f.goToNextSlide() : f.goToPrevSlide(), 
                f.stopAuto());
            } else {
                var d = 0;
                "horizontal" == e.settings.mode ? (d = e.touch.end.x - e.touch.start.x, c = e.touch.originalPos.left) : (d = e.touch.end.y - e.touch.start.y, 
                c = e.touch.originalPos.top), !e.settings.infiniteLoop && (0 == e.active.index && d > 0 || e.active.last && 0 > d) ? u(c, "reset", 200) : Math.abs(d) >= e.settings.swipeThreshold ? (0 > d ? f.goToNextSlide() : f.goToPrevSlide(), 
                f.stopAuto()) : u(c, "reset", 200);
            }
            e.viewport.unbind("touchend", P);
        }, Q = function() {
            var b = a(window).width(), c = a(window).height();
            (g != b || h != c) && (g = b, h = c, f.redrawSlider(), e.settings.onSliderResize.call(f, e.active.index));
        };
        return f.goToSlide = function(b, c) {
            if (!e.working && e.active.index != b) if (e.working = !0, e.oldIndex = e.active.index, 
            e.active.index = 0 > b ? r() - 1 : b >= r() ? 0 : b, e.settings.onSlideBefore(e.children.eq(e.active.index), e.oldIndex, e.active.index), 
            "next" == c ? e.settings.onSlideNext(e.children.eq(e.active.index), e.oldIndex, e.active.index) : "prev" == c && e.settings.onSlidePrev(e.children.eq(e.active.index), e.oldIndex, e.active.index), 
            e.active.last = e.active.index >= r() - 1, e.settings.pager && F(e.active.index), 
            e.settings.controls && I(), "fade" == e.settings.mode) e.settings.adaptiveHeight && e.viewport.height() != n() && e.viewport.animate({
                height: n()
            }, e.settings.adaptiveHeightSpeed), e.children.filter(":visible").fadeOut(e.settings.speed).css({
                zIndex: 0
            }), e.children.eq(e.active.index).css("zIndex", e.settings.slideZIndex + 1).fadeIn(e.settings.speed, function() {
                a(this).css("zIndex", e.settings.slideZIndex), G();
            }); else {
                e.settings.adaptiveHeight && e.viewport.height() != n() && e.viewport.animate({
                    height: n()
                }, e.settings.adaptiveHeightSpeed);
                var d = 0, g = {
                    left: 0,
                    top: 0
                };
                if (!e.settings.infiniteLoop && e.carousel && e.active.last) if ("horizontal" == e.settings.mode) {
                    var h = e.children.eq(e.children.length - 1);
                    g = h.position(), d = e.viewport.width() - h.outerWidth();
                } else {
                    var i = e.children.length - e.settings.minSlides;
                    g = e.children.eq(i).position();
                } else if (e.carousel && e.active.last && "prev" == c) {
                    var j = 1 == e.settings.moveSlides ? e.settings.maxSlides - s() : (r() - 1) * s() - (e.children.length - e.settings.maxSlides), h = f.children(".bx-clone").eq(j);
                    g = h.position();
                } else if ("next" == c && 0 == e.active.index) g = f.find("> .bx-clone").eq(e.settings.maxSlides).position(), 
                e.active.last = !1; else if (b >= 0) {
                    var k = b * s();
                    g = e.children.eq(k).position();
                }
                if (void 0 !== g) {
                    var l = "horizontal" == e.settings.mode ? -(g.left - d) : -g.top;
                    u(l, "slide", e.settings.speed);
                }
            }
        }, f.goToNextSlide = function() {
            if (e.settings.infiniteLoop || !e.active.last) {
                var a = parseInt(e.active.index) + 1;
                f.goToSlide(a, "next");
            }
        }, f.goToPrevSlide = function() {
            if (e.settings.infiniteLoop || 0 != e.active.index) {
                var a = parseInt(e.active.index) - 1;
                f.goToSlide(a, "prev");
            }
        }, f.startAuto = function(a) {
            e.interval || (e.interval = setInterval(function() {
                "next" == e.settings.autoDirection ? f.goToNextSlide() : f.goToPrevSlide();
            }, e.settings.pause), e.settings.autoControls && 1 != a && H("stop"));
        }, f.stopAuto = function(a) {
            e.interval && (clearInterval(e.interval), e.interval = null, e.settings.autoControls && 1 != a && H("start"));
        }, f.getCurrentSlide = function() {
            return e.active.index;
        }, f.getCurrentSlideElement = function() {
            return e.children.eq(e.active.index);
        }, f.getSlideCount = function() {
            return e.children.length;
        }, f.redrawSlider = function() {
            e.children.add(f.find(".bx-clone")).outerWidth(p()), e.viewport.css("height", n()), 
            e.settings.ticker || t(), e.active.last && (e.active.index = r() - 1), e.active.index >= r() && (e.active.last = !0), 
            e.settings.pager && !e.settings.pagerCustom && (v(), F(e.active.index));
        }, f.destroySlider = function() {
            e.initialized && (e.initialized = !1, a(".bx-clone", this).remove(), e.children.each(function() {
                void 0 != a(this).data("origStyle") ? a(this).attr("style", a(this).data("origStyle")) : a(this).removeAttr("style");
            }), void 0 != a(this).data("origStyle") ? this.attr("style", a(this).data("origStyle")) : a(this).removeAttr("style"), 
            a(this).unwrap().unwrap(), e.controls.el && e.controls.el.remove(), e.controls.next && e.controls.next.remove(), 
            e.controls.prev && e.controls.prev.remove(), e.pagerEl && e.settings.controls && e.pagerEl.remove(), 
            a(".bx-caption", this).remove(), e.controls.autoEl && e.controls.autoEl.remove(), 
            clearInterval(e.interval), e.settings.responsive && a(window).unbind("resize", Q));
        }, f.reloadSlider = function(a) {
            void 0 != a && (d = a), f.destroySlider(), j();
        }, j(), this;
    };
}(jQuery), function(a, b) {
    "function" == typeof define && define.amd ? define([ "jquery" ], b) : "object" == typeof module && module.exports ? module.exports = b(require("jquery")) : a.Strip = b(jQuery);
}(this, function($) {
    function Spinner() {
        return this.initialize.apply(this, _slice.call(arguments));
    }
    function Timers() {
        return this.initialize.apply(this, _slice.call(arguments));
    }
    function getURIData(a) {
        var b = {
            type: "image"
        };
        return $.each(Types, function(c, d) {
            var e = d.data(a);
            e && (b = e, b.type = c, b.url = a);
        }), b;
    }
    function detectExtension(a) {
        var b = (a || "").replace(/\?.*/g, "").match(/\.([^.]{3,4})$/);
        return b ? b[1].toLowerCase() : null;
    }
    function View() {
        this.initialize.apply(this, _slice.call(arguments));
    }
    var Strip = {
        version: "1.6.4"
    };
    Strip.Skins = {
        strip: {}
    };
    var Browser = function(a) {
        function b(b) {
            var c = new RegExp(b + "([\\d.]+)").exec(a);
            return !c || parseFloat(c[1]);
        }
        return {
            IE: !(!window.attachEvent || -1 !== a.indexOf("Opera")) && b("MSIE "),
            Opera: a.indexOf("Opera") > -1 && (!!window.opera && opera.version && parseFloat(opera.version()) || 7.55),
            WebKit: a.indexOf("AppleWebKit/") > -1 && b("AppleWebKit/"),
            Gecko: a.indexOf("Gecko") > -1 && -1 === a.indexOf("KHTML") && b("rv:"),
            MobileSafari: !!a.match(/Apple.*Mobile.*Safari/),
            Chrome: a.indexOf("Chrome") > -1 && b("Chrome/"),
            ChromeMobile: a.indexOf("CrMo") > -1 && b("CrMo/"),
            Android: a.indexOf("Android") > -1 && b("Android "),
            IEMobile: a.indexOf("IEMobile") > -1 && b("IEMobile/")
        };
    }(navigator.userAgent), _slice = Array.prototype.slice, Fit = {
        within: function(a, b) {
            for (var c = $.extend({
                height: !0,
                width: !0
            }, arguments[2] || {}), d = $.extend({}, b), e = 1, f = 5, g = {
                width: c.width,
                height: c.height
            }; f > 0 && (g.width && d.width > a.width || g.height && d.height > a.height); ) {
                var h = 1, i = 1;
                g.width && d.width > a.width && (h = a.width / d.width), g.height && d.height > a.height && (i = a.height / d.height);
                var e = Math.min(h, i);
                d = {
                    width: Math.round(b.width * e),
                    height: Math.round(b.height * e)
                }, f--;
            }
            return d.width = Math.max(d.width, 0), d.height = Math.max(d.height, 0), d;
        }
    };
    $.extend($.easing, {
        stripEaseInCubic: function(a, b, c, d, e) {
            return d * (b /= e) * b * b + c;
        },
        stripEaseInSine: function(a, b, c, d, e) {
            return -d * Math.cos(b / e * (Math.PI / 2)) + d + c;
        },
        stripEaseOutSine: function(a, b, c, d, e) {
            return d * Math.sin(b / e * (Math.PI / 2)) + c;
        }
    });
    var Support = function() {
        function a(a) {
            return c(a, "prefix");
        }
        function b(a, b) {
            for (var c in a) if (void 0 !== d.style[a[c]]) return "prefix" != b || a[c];
            return !1;
        }
        function c(a, c) {
            var d = a.charAt(0).toUpperCase() + a.substr(1);
            return b((a + " " + e.join(d + " ") + d).split(" "), c);
        }
        var d = document.createElement("div"), e = "Webkit Moz O ms Khtml".split(" ");
        return {
            css: {
                animation: c("animation"),
                transform: c("transform"),
                prefixed: a
            },
            svg: !!document.createElementNS && !!document.createElementNS("http://www.w3.org/2000/svg", "svg").createSVGRect,
            touch: function() {
                try {
                    return !!("ontouchstart" in window || window.DocumentTouch && document instanceof DocumentTouch);
                } catch (a) {
                    return !1;
                }
            }()
        };
    }();
    Support.mobileTouch = Support.touch && (Browser.MobileSafari || Browser.Android || Browser.IEMobile || Browser.ChromeMobile || !/^(Win|Mac|Linux)/.test(navigator.platform));
    var Bounds = {
        viewport: function() {
            var a = {
                width: $(window).width()
            };
            if (Browser.MobileSafari || Browser.Android && Browser.Gecko) {
                var b = document.documentElement.clientWidth / window.innerWidth;
                a.height = window.innerHeight * b;
            } else a.height = $(window).height();
            return a;
        }
    }, ImageReady = function(a) {
        var b = function() {
            return this.initialize.apply(this, Array.prototype.slice.call(arguments));
        };
        a.extend(b.prototype, {
            initialize: function() {
                this.options = a.extend({
                    test: function() {},
                    success: function() {},
                    timeout: function() {},
                    callAt: !1,
                    intervals: [ [ 0, 0 ], [ 1e3, 10 ], [ 2e3, 50 ], [ 4e3, 100 ], [ 2e4, 500 ] ]
                }, arguments[0] || {}), this._test = this.options.test, this._success = this.options.success, 
                this._timeout = this.options.timeout, this._ipos = 0, this._time = 0, this._delay = this.options.intervals[this._ipos][1], 
                this._callTimeouts = [], this.poll(), this._createCallsAt();
            },
            poll: function() {
                this._polling = setTimeout(a.proxy(function() {
                    if (this._test()) return void this.success();
                    if (this._time += this._delay, this._time >= this.options.intervals[this._ipos][0]) {
                        if (!this.options.intervals[this._ipos + 1]) return void ("function" == a.type(this._timeout) && this._timeout());
                        this._ipos++, this._delay = this.options.intervals[this._ipos][1];
                    }
                    this.poll();
                }, this), this._delay);
            },
            success: function() {
                this.abort(), this._success();
            },
            _createCallsAt: function() {
                this.options.callAt && a.each(this.options.callAt, a.proxy(function(b, c) {
                    var d = c[0], e = c[1], f = setTimeout(a.proxy(function() {
                        e();
                    }, this), d);
                    this._callTimeouts.push(f);
                }, this));
            },
            _stopCallTimeouts: function() {
                a.each(this._callTimeouts, function(a, b) {
                    clearTimeout(b);
                }), this._callTimeouts = [];
            },
            abort: function() {
                this._stopCallTimeouts(), this._polling && (clearTimeout(this._polling), this._polling = null);
            }
        });
        var c = function() {
            return this.initialize.apply(this, Array.prototype.slice.call(arguments));
        };
        return a.extend(c.prototype, {
            supports: {
                naturalWidth: function() {
                    return "naturalWidth" in new Image();
                }()
            },
            initialize: function(b, c, d) {
                return this.img = a(b)[0], this.successCallback = c, this.errorCallback = d, this.isLoaded = !1, 
                this.options = a.extend({
                    method: "onload",
                    pollFallbackAfter: 1e3
                }, arguments[3] || {}), "onload" != this.options.method && this.supports.naturalWidth ? void this.poll() : void this.load();
            },
            poll: function() {
                this._poll = new b({
                    test: a.proxy(function() {
                        return this.img.naturalWidth > 0;
                    }, this),
                    success: a.proxy(function() {
                        this.success();
                    }, this),
                    timeout: a.proxy(function() {
                        this.error();
                    }, this),
                    callAt: [ [ this.options.pollFallbackAfter, a.proxy(function() {
                        this.load();
                    }, this) ] ]
                });
            },
            load: function() {
                this._loading = setTimeout(a.proxy(function() {
                    var b = new Image();
                    this._onloadImage = b, b.onload = a.proxy(function() {
                        b.onload = function() {}, this.supports.naturalWidth || (this.img.naturalWidth = b.width, 
                        this.img.naturalHeight = b.height, b.naturalWidth = b.width, b.naturalHeight = b.height), 
                        this.success();
                    }, this), b.onerror = a.proxy(this.error, this), b.src = this.img.src;
                }, this));
            },
            success: function() {
                this._calledSuccess || (this._calledSuccess = !0, this.abort(), this.waitForRender(a.proxy(function() {
                    this.isLoaded = !0, this.successCallback(this);
                }, this)));
            },
            error: function() {
                this._calledError || (this._calledError = !0, this.abort(), this._errorRenderTimeout = setTimeout(a.proxy(function() {
                    this.errorCallback && this.errorCallback(this);
                }, this)));
            },
            abort: function() {
                this.stopLoading(), this.stopPolling(), this.stopWaitingForRender();
            },
            stopPolling: function() {
                this._poll && (this._poll.abort(), this._poll = null);
            },
            stopLoading: function() {
                this._loading && (clearTimeout(this._loading), this._loading = null), this._onloadImage && (this._onloadImage.onload = function() {}, 
                this._onloadImage.onerror = function() {});
            },
            waitForRender: function(a) {
                this._renderTimeout = setTimeout(a);
            },
            stopWaitingForRender: function() {
                this._renderTimeout && (clearTimeout(this._renderTimeout), this._renderTimeout = null), 
                this._errorRenderTimeout && (clearTimeout(this._errorRenderTimeout), this._errorRenderTimeout = null);
            }
        }), c;
    }(jQuery);
    Spinner.supported = Support.css.transform && Support.css.animation, $.extend(Spinner.prototype, {
        initialize: function(a) {
            this.element = $(a), this.element[0] && (this.classPrefix = "strp-", this.setOptions(arguments[1] || {}), 
            this.element.addClass(this.classPrefix + "spinner"), this.element.append(this._rotate = $("<div>").addClass(this.classPrefix + "spinner-rotate")), 
            this.build(), this.start());
        },
        setOptions: function(a) {
            this.options = $.extend({
                show: 200,
                hide: 200
            }, a || {});
        },
        build: function() {
            if (!this._build) {
                this._rotate.html("");
                var a = (this.options.length, this.options.radius, this.element.is(":visible"));
                a || this.element.show();
                var b, c;
                this._rotate.append(b = $("<div>").addClass(this.classPrefix + "spinner-frame").append(c = $("<div>").addClass(this.classPrefix + "spinner-line")));
                var d = parseInt($(c).css("z-index"));
                this.lines = d, c.css({
                    "z-index": "inherit"
                }), b.remove(), a || this.element.hide();
                for (var e, f = 0; d > f; f++) {
                    var b, c;
                    this._rotate.append(b = $("<div>").addClass(this.classPrefix + "spinner-frame").append(c = $("<div>").addClass(this.classPrefix + "spinner-line"))), 
                    e = e || c.css("color"), c.css({
                        background: e
                    }), b.css({
                        opacity: (1 / d * (f + 1)).toFixed(2)
                    });
                    var g = {};
                    g[Support.css.prefixed("transform")] = "rotate(" + 360 / d * (f + 1) + "deg)", b.css(g);
                }
                this._build = !0;
            }
        },
        start: function() {
            var a = {};
            a[Support.css.prefixed("animation")] = this.classPrefix + "spinner-spin 1s infinite steps(" + this.lines + ")", 
            this._rotate.css(a);
        },
        stop: function() {
            var a = {};
            a[Support.css.prefixed("animation")] = "none", this._rotate.css(a);
        },
        show: function(a) {
            this.build(), this.start(), this.element.stop(!0).fadeTo(this.options.show, 1, a);
        },
        hide: function(a) {
            this.element.stop(!0).fadeOut(this.options.hide, $.proxy(function() {
                this.stop(), a && a();
            }, this));
        },
        refresh: function() {
            this._build = !1, this.build();
        }
    }), $.extend(Timers.prototype, {
        initialize: function() {
            this._timers = {};
        },
        set: function(a, b, c) {
            this._timers[a] = setTimeout(b, c);
        },
        get: function(a) {
            return this._timers[a];
        },
        clear: function(a) {
            a ? this._timers[a] && (clearTimeout(this._timers[a]), delete this._timers[a]) : this.clearAll();
        },
        clearAll: function() {
            $.each(this._timers, function(a, b) {
                clearTimeout(b);
            }), this._timers = {};
        }
    });
    var Types = {
        image: {
            extensions: "bmp gif jpeg jpg png webp",
            detect: function(a) {
                return $.inArray(detectExtension(a), this.extensions.split(" ")) > -1;
            },
            data: function(a) {
                return !!this.detect() && {
                    extension: detectExtension(a)
                };
            }
        },
        youtube: {
            detect: function(a) {
                var b = /(youtube\.com|youtu\.be)\/watch\?(?=.*vi?=([a-zA-Z0-9-_]+))(?:\S+)?$/.exec(a);
                return b && b[2] ? b[2] : !(!(b = /(youtube\.com|youtu\.be)\/(vi?\/|u\/|embed\/)?([a-zA-Z0-9-_]+)(?:\S+)?$/i.exec(a)) || !b[3]) && b[3];
            },
            data: function(a) {
                var b = this.detect(a);
                return !!b && {
                    id: b
                };
            }
        },
        vimeo: {
            detect: function(a) {
                var b = /(vimeo\.com)\/([a-zA-Z0-9-_]+)(?:\S+)?$/i.exec(a);
                return !(!b || !b[2]) && b[2];
            },
            data: function(a) {
                var b = this.detect(a);
                return !!b && {
                    id: b
                };
            }
        }
    }, VimeoReady = function() {
        var a = function() {
            return this.initialize.apply(this, _slice.call(arguments));
        };
        $.extend(a.prototype, {
            initialize: function(a, b) {
                this.url = a, this.callback = b, this.load();
            },
            load: function() {
                var a = b.get(this.url);
                if (a) return this.callback(a.data);
                var c = "http" + (window.location && "https:" == window.location.protocol ? "s" : "") + ":", d = getURIData(this.url).id;
                this._xhr = $.getJSON(c + "//vimeo.com/api/oembed.json?url=" + c + "//vimeo.com/" + d + "&maxwidth=9999999&maxheight=9999999&callback=?", $.proxy(function(a) {
                    var c = {
                        dimensions: {
                            width: a.width,
                            height: a.height
                        }
                    };
                    b.set(this.url, c), this.callback && this.callback(c);
                }, this));
            },
            abort: function() {
                this._xhr && (this._xhr.abort(), this._xhr = null);
            }
        });
        var b = {
            cache: [],
            get: function(a) {
                for (var b = null, c = 0; c < this.cache.length; c++) this.cache[c] && this.cache[c].url == a && (b = this.cache[c]);
                return b;
            },
            set: function(a, b) {
                this.remove(a), this.cache.push({
                    url: a,
                    data: b
                });
            },
            remove: function(a) {
                for (var b = 0; b < this.cache.length; b++) this.cache[b] && this.cache[b].url == a && delete this.cache[b];
            }
        };
        return a;
    }(), Options = {
        defaults: {
            effects: {
                spinner: {
                    show: 200,
                    hide: 200
                },
                transition: {
                    min: 175,
                    max: 250
                },
                ui: {
                    show: 0,
                    hide: 200
                },
                window: {
                    show: 300,
                    hide: 300
                }
            },
            hideOnClickOutside: !0,
            keyboard: {
                left: !0,
                right: !0,
                esc: !0
            },
            loop: !0,
            overlap: !0,
            preload: [ 1, 2 ],
            position: !0,
            skin: "strip",
            side: "right",
            spinner: !0,
            toggle: !0,
            uiDelay: 3e3,
            vimeo: {
                autoplay: 1,
                api: 1,
                title: 1,
                byline: 1,
                portrait: 0,
                loop: 0
            },
            youtube: {
                autoplay: 1,
                controls: 1,
                enablejsapi: 1,
                hd: 1,
                iv_load_policy: 3,
                loop: 0,
                modestbranding: 1,
                rel: 0,
                vq: "hd1080"
            },
            initialTypeOptions: {
                image: {},
                vimeo: {
                    width: 1280
                },
                youtube: {
                    width: 1280,
                    height: 720
                }
            }
        },
        create: function(a, b, c) {
            a = a || {}, c = c || {}, a.skin = a.skin || this.defaults.skin;
            var d = a.skin ? $.extend({}, Strip.Skins[a.skin] || Strip.Skins[this.defaults.skin]) : {}, e = $.extend(!0, {}, this.defaults, d);
            e.initialTypeOptions && (b && e.initialTypeOptions[b] && (e = $.extend(!0, {}, e.initialTypeOptions[b], e)), 
            delete e.initialTypeOptions);
            var f = $.extend(!0, {}, e, a);
            return (!f.effects || Browser.IE && Browser.IE < 9) && (f.effects = {}, $.each(this.defaults.effects, function(a, b) {
                $.each(f.effects[a] = $.extend({}, b), function(b) {
                    f.effects[a][b] = 0;
                });
            }), f.spinner = !1), f.keyboard && ("boolean" == $.type(f.keyboard) && (f.keyboard = {}, 
            $.each(this.defaults.keyboard, function(a) {
                f.keyboard[a] = !0;
            })), ("vimeo" == b || "youtube" == b) && $.extend(f.keyboard, {
                left: !1,
                right: !1
            })), ("vimeo" == b || "youtube" == b) && (f.overlap = !1), f;
        }
    };
    $.extend(View.prototype, {
        initialize: function(object) {
            var options = arguments[1] || {}, data = {};
            if ("string" == $.type(object)) object = {
                url: object
            }; else if (object && 1 == object.nodeType) {
                var element = $(object);
                object = {
                    element: element[0],
                    url: element.attr("href"),
                    caption: element.data("strip-caption"),
                    group: element.data("strip-group"),
                    extension: element.data("strip-extension"),
                    type: element.data("strip-type"),
                    options: element.data("strip-options") && eval("({" + element.data("strip-options") + "})") || {}
                };
            }
            if (object && (object.extension || (object.extension = detectExtension(object.url)), 
            !object.type)) {
                var data = getURIData(object.url);
                object._data = data, object.type = data.type;
            }
            return object._data || (object._data = getURIData(object.url)), object.options = object && object.options ? $.extend(!0, $.extend({}, options), $.extend({}, object.options)) : $.extend({}, options), 
            object.options = Options.create(object.options, object.type, object._data), $.extend(this, object), 
            this;
        }
    });
    var Pages = {
        initialize: function(a) {
            this.element = a, this.pages = {}, this.uid = 1;
        },
        add: function(a) {
            this.uid++, this.views = a, this.pages[this.uid] = [], Window._showUIOnResize = !0, 
            $.each(a, $.proxy(function(a, b) {
                this.pages[this.uid].push(new Page(b, a + 1, this.views.length));
            }, this));
        },
        show: function(a, b) {
            var c = this.pages[this.uid][a - 1];
            return this.page && this.page.uid == c.uid ? void (c.view.options.toggle && (Window.hide(), 
            this.page = null)) : (Pages.setActiveClass(c), this.page = c, this.removeHiddenAndLoadingInactive(), 
            void c.show($.proxy(function() {
                this._switched = !1, b && b();
            }, this)));
        },
        getLoadingCount: function() {
            var a = 0;
            return $.each(this.pages, function(b, c) {
                $.each(c, function(b, c) {
                    c.loading && a++;
                });
            }), a;
        },
        getPositionInActivePageGroup: function(a) {
            var b = 0, c = this.pages[this.uid];
            return c && $.each(c, function(c, d) {
                d.view.element && d.view.element == a && (b = c + 1);
            }), b;
        },
        removeExpired: function(a) {
            $.each(this.pages, function(b, c) {
                b != this._id && $.each(c, function(b, c) {
                    c.remove(a);
                });
            });
        },
        removeAll: function() {
            $.each(this.pages, function(a, b) {
                $.each(b, function(a, b) {
                    b.remove();
                });
            }), this.pages = {};
        },
        hideVisibleInactive: function(a) {
            $.each(this.pages, $.proxy(function(b, c) {
                $.each(c, $.proxy(function(b, c) {
                    c.uid != this.page.uid && c.hide(null, a);
                }, this));
            }, this));
        },
        stopInactive: function() {
            $.each(this.pages, $.proxy(function(a, b) {
                $.each(b, $.proxy(function(a, b) {
                    b.uid == this.page.uid || b.preloading || b.stop();
                }, this));
            }, this));
        },
        removeHiddenAndLoadingInactive: function() {
            var a = [];
            $.each(this.pages, $.proxy(function(b, c) {
                if (b != this.uid) {
                    var d = 0;
                    $.each(c, $.proxy(function(a, b) {
                        b.visible && !b.loading || b.animatingWindow || b.remove(), b.removed && d++;
                    }, this)), d == c.length && a.push(b);
                }
            }, this)), $.each(a, $.proxy(function(a, b) {
                delete this.pages[b];
            }, this));
        },
        stop: function() {
            $.each(this.pages, function(a, b) {
                $.each(b, function(a, b) {
                    b.stop();
                });
            });
        },
        setActiveClass: function(a) {
            this.removeActiveClasses();
            var b = a.view.element;
            if (b) {
                $(b).addClass("strip-active-element strip-active-group");
                var c = $(b).data("strip-group");
                c && $('.strip[data-strip-group="' + c + '"]').addClass("strip-active-group");
            }
        },
        removeActiveClasses: function() {
            $(".strip-active-group").removeClass("strip-active-group strip-active-element");
        }
    }, Page = function() {
        function a() {
            return this.initialize.apply(this, _slice.call(arguments));
        }
        var b = 0, c = {};
        return $.extend(a.prototype, {
            initialize: function(a, c, d) {
                this.view = a, this.dimensions = {
                    width: 0,
                    height: 0
                }, this.uid = b++, this._position = c, this._total = d, this.animated = !1, this.visible = !1, 
                this.queues = {}, this.queues.showhide = $({});
            },
            create: function() {
                if (!this._created) {
                    Pages.element.append(this.element = $("<div>").addClass("strp-page").append(this.container = $("<div>").addClass("strp-container")).css({
                        opacity: 0
                    }).hide());
                    var a = this.view.options.position && this._total > 1;
                    switch ((this.view.caption || a) && (this.element.append(this.info = $("<div>").addClass("strp-info").append(this.info_padder = $("<div>").addClass("strp-info-padder"))), 
                    a && (this.element.addClass("strp-has-position"), this.info_padder.append($("<div>").addClass("strp-position").html(this._position + " / " + this._total))), 
                    this.view.caption && this.info_padder.append(this.caption = $("<div>").addClass("strp-caption").html(this.view.caption))), 
                    this.view.type) {
                      case "image":
                        this.container.append(this.content = $("<img>").attr({
                            src: this.view.url
                        }));
                        break;

                      case "vimeo":
                      case "youtube":
                        this.container.append(this.content = $("<div>"));
                    }
                    this.element.addClass("strp" + (this.view.options.overlap ? "" : "-no") + "-overlap"), 
                    this._total < 2 && this.element.addClass("strp-no-sides"), this.content.addClass("strp-content-element"), 
                    this._created = !0;
                }
            },
            _getSurroundingPages: function() {
                var a;
                if (!(a = this.view.options.preload)) return [];
                for (var b = [], c = Math.max(1, this._position - a[0]), d = Math.min(this._position + a[1], this._total), e = this._position, f = e; d >= f; f++) {
                    var g = Pages.pages[Pages.uid][f - 1];
                    g._position != e && b.push(g);
                }
                for (var f = e; f >= c; f--) {
                    var g = Pages.pages[Pages.uid][f - 1];
                    g._position != e && b.push(g);
                }
                return b;
            },
            preloadSurroundingImages: function() {
                var a = this._getSurroundingPages();
                $.each(a, $.proxy(function(a, b) {
                    b.preload();
                }, this));
            },
            preload: function() {
                this.preloading || this.preloaded || "image" != this.view.type || !this.view.options.preload || this.loaded || (this.create(), 
                this.preloading = !0, new ImageReady(this.content[0], $.proxy(function(a) {
                    this.loaded = !0, this.preloading = !1, this.preloaded = !0, this.dimensions = {
                        width: a.img.naturalWidth,
                        height: a.img.naturalHeight
                    };
                }, this), null, {
                    method: "naturalWidth"
                }));
            },
            load: function(a) {
                if (this.create(), this.loaded) return void (a && a());
                switch (this.abort(), this.loading = !0, this.view.options.spinner && !c[this.view.url] && Window.startLoading(), 
                this.view.type) {
                  case "image":
                    if (this.error) return void (a && a());
                    this.imageReady = new ImageReady(this.content[0], $.proxy(function(b) {
                        this._markAsLoaded(), this.dimensions = {
                            width: b.img.naturalWidth,
                            height: b.img.naturalHeight
                        }, a && a();
                    }, this), $.proxy(function() {
                        this._markAsLoaded(), this.content.hide(), this.container.append(this.error = $("<div>").addClass("strp-error")), 
                        this.element.addClass("strp-has-error"), this.dimensions = {
                            width: this.error.outerWidth(),
                            height: this.error.outerHeight()
                        }, a && a();
                    }, this), {
                        method: "naturalWidth"
                    });
                    break;

                  case "vimeo":
                    this.vimeoReady = new VimeoReady(this.view.url, $.proxy(function(b) {
                        this._markAsLoaded(), this.dimensions = {
                            width: b.dimensions.width,
                            height: b.dimensions.height
                        }, a && a();
                    }, this));
                    break;

                  case "youtube":
                    this._markAsLoaded(), this.dimensions = {
                        width: this.view.options.width,
                        height: this.view.options.height
                    }, a && a();
                }
            },
            _markAsLoaded: function() {
                this.loading = !1, this.loaded = !0, c[this.view.url] = !0, Window.stopLoading();
            },
            isVideo: function() {
                return /^(youtube|vimeo)$/.test(this.view.type);
            },
            insertVideo: function(a) {
                if (this.playerIframe || !this.isVideo()) return void (a && a());
                var b = "http" + (window.location && "https:" == window.location.protocol ? "s" : "") + ":", c = $.extend({}, this.view.options[this.view.type] || {}), d = $.param(c), e = {
                    vimeo: b + "//player.vimeo.com/video/{id}?{queryString}",
                    youtube: b + "//www.youtube.com/embed/{id}?{queryString}"
                }, f = e[this.view.type].replace("{id}", this.view._data.id).replace("{queryString}", d);
                this.content.append(this.playerIframe = $("<iframe webkitAllowFullScreen mozallowfullscreen allowFullScreen>").attr({
                    src: f,
                    height: this.contentDimensions.height,
                    width: this.contentDimensions.width,
                    frameborder: 0
                })), a && a();
            },
            raise: function() {
                var a = Pages.element[0].lastChild;
                a && a == this.element[0] || Pages.element.append(this.element);
            },
            show: function(a) {
                var b = this.queues.showhide;
                b.queue([]), this.animated = !0, this.animatingWindow = !1, b.queue(function(a) {
                    Pages.stopInactive(), a();
                }), b.queue($.proxy(function(a) {
                    Window.setSide(this.view.options.side, a);
                }, this)), b.queue($.proxy(function(a) {
                    this.view.options.spinner && Window._spinner && (Window.setSpinnerSkin(this.view.options.skin), 
                    Window._spinner.setOptions(this.view.options.effects.spinner), Window._spinner.refresh()), 
                    this.load($.proxy(function() {
                        this.preloadSurroundingImages(), a();
                    }, this));
                }, this)), b.queue($.proxy(function(a) {
                    this.raise(), Window.setSkin(this.view.options.skin), Window.bindUI(), Keyboard.enable(this.view.options.keyboard), 
                    this.fitToWindow(), a();
                }, this)), b.queue($.proxy(function(a) {
                    Window.timers.set("bind-hide-on-click-outside", $.proxy(function() {
                        Window.bindHideOnClickOutside(), a();
                    }, this), 1);
                }, this)), this.isVideo() && b.queue($.proxy(function(a) {
                    this.insertVideo($.proxy(function() {
                        a();
                    }));
                }, this)), b.queue($.proxy(function(a) {
                    this.animatingWindow = !0;
                    var b = 3, c = "horizontal" == this.getOrientation() ? "width" : "height", d = this.view && this.view.options.onShow;
                    "function" == $.type(d) && d.call(Strip);
                    var e = Window.resize(this[c], function() {
                        --b < 1 && a();
                    }, e);
                    this._show(function() {
                        --b < 1 && a();
                    }, e), Window.adjustPrevNext(function() {
                        --b < 1 && a();
                    }, e), Window._showUIOnResize && (Window.showUI(null, e), Window._showUIOnResize = !1), 
                    Pages.hideVisibleInactive(e);
                }, this)), b.queue($.proxy(function(b) {
                    this.animatingWindow = !1, this.animated = !1, this.visible = !0, a && a(), b();
                }, this));
            },
            _show: function(a, b) {
                var c = Window.visible ? "number" == $.type(b) ? b : this.view.options.effects.transition.min : 0;
                this.element.stop(!0).show().fadeTo(c || 0, 1, a);
            },
            hide: function(a, b) {
                if (this.element) {
                    this.removeVideo(), this.abort();
                    var c = this.view.options.effects.transition.min;
                    "number" == $.type(b) && (c = b);
                    this.isVideo() && (c = 0), this.element.stop(!0).fadeTo(c, 0, "stripEaseInCubic", $.proxy(function() {
                        this.element.hide(), this.visible = !1, a && a();
                    }, this));
                }
            },
            stop: function() {
                this.queues.showhide.queue([]), this.element && this.element.stop(!0), this.abort();
            },
            removeVideo: function() {
                this.playerIframe && (this.playerIframe[0].src = "//about:blank", this.playerIframe.remove(), 
                this.playerIframe = null);
            },
            remove: function() {
                this.stop(), this.removeVideo(), this.element && this.element.remove(), this.visible = !1, 
                this.removed = !0;
            },
            abort: function() {
                this.imageReady && !this.preloading && (this.imageReady.abort(), this.imageReady = null), 
                this.vimeoReady && (this.vimeoReady.abort(), this.vimeoReady = null), this.loading = !1, 
                Window.stopLoading();
            },
            _getDimensionsFitToView: function() {
                var a = $.extend({}, this.dimensions), b = $.extend({}, this.dimensions), c = this.view.options;
                return c.maxWidth && (a.width = c.maxWidth), c.maxHeight && (a.heigth = c.maxHeight), 
                b = Fit.within(a, b);
            },
            getOrientation: function() {
                return "left" == this.view.options.side || "right" == this.view.options.side ? "horizontal" : "vertical";
            },
            fitToWindow: function() {
                var a = this.element, b = this._getDimensionsFitToView(), c = Bounds.viewport(), d = $.extend({}, c), e = this.getOrientation(), f = "horizontal" == e ? "width" : "height", g = a.find(".strp-container");
                Window.element.removeClass("strp-measured");
                var h = Window.element, i = "width" == f ? parseInt(h.css("min-width")) > 0 : parseInt(h.css("min-height")) > 0, j = i ? 0 : parseInt(h.css("margin-" + ("width" == f ? "left" : "bottom")));
                Window.element.addClass("strp-measured"), d[f] -= j;
                var k = parseInt(g.css("padding-left")) + parseInt(g.css("padding-right")), l = parseInt(g.css("padding-top")) + parseInt(g.css("padding-bottom"));
                d.width -= k, d.height -= l;
                var m = Fit.within(d, b), n = $.extend({}, m), o = this.content;
                this.error && (o = this.error);
                var p = this.info, q = 0;
                if (p) {
                    var r = Window.element.is(":visible");
                    r || Window.element.show();
                    var s = a.is(":visible");
                    if (s || a.show(), "width" == f) {
                        a.css({
                            width: i ? c.width : m.width + k
                        });
                        var t = d.height;
                        o.hide(), q = p.outerHeight(), o.show(), d.height = t - q, n = Fit.within(d, b);
                        for (var u, v, w, x = $.extend({}, n), y = q, z = i ? 0 : 4; z > 0 && (w = m.width - n.width); ) a.css({
                            width: m.width + k - w
                        }), v = q, o.hide(), q = p.outerHeight(), u = Math.max(this.caption ? this.caption.outerWidth() + k : 0, this.position ? this.position.outerWidth() + k : 0), 
                        o.show(), q == v && u <= m.width + k - w ? m.width -= w : (d.height = t - q, n = Fit.within(d, b), 
                        0 >= z - 1 && (a.css({
                            width: m.width + k
                        }), n = x, q = y)), z--;
                    } else Browser.IE && Browser.IE < 8 && a.css({
                        width: c.width
                    }), o.hide(), q = p.outerHeight(), o.show(), d.height -= q, n = Fit.within(d, b), 
                    m.height = n.height;
                    s || a.hide(), r || Window.element.hide();
                }
                var A = {
                    width: m.width + k,
                    height: m.height + l + q
                };
                i && (A = c), a.css("width" == f ? {
                    width: A.width
                } : {
                    height: A.height
                }), g.css({
                    bottom: q
                });
                var B = -.5 * n.width, C = -.5 * n.height;
                Browser.IE && Browser.IE < 8 && (B = Math.floor(B), C = Math.floor(C)), o.css($.extend({}, n, {
                    "margin-left": B,
                    "margin-top": C
                })), this.playerIframe && this.playerIframe.attr(n), this.contentDimensions = n, 
                this.width = A.width, this.height = A.height, this.z = this[f];
            }
        }), a;
    }(), Window = {
        initialize: function() {
            this.queues = [], this.queues.hide = $({}), this.pages = [], this.timers = new Timers(), 
            this.build(), this.setSkin(Options.defaults.skin);
        },
        build: function() {
            Spinner.supported && ($(document.body).append(this.spinnerMove = $("<div>").addClass("strp-spinner-move").hide().append(this.spinner = $("<div>").addClass("strp-spinner"))), 
            this._spinner = new Spinner(this.spinner), this._spinnerMoveSkinless = this.spinnerMove[0].className), 
            $(document.body).append(this.element = $("<div>").addClass("strp-window strp-measured").append(this._pages = $("<div>").addClass("strp-pages")).append(this._previous = $("<div>").addClass("strp-nav strp-nav-previous").append($("<div>").addClass("strp-nav-button").append($("<div>").addClass("strp-nav-button-background")).append($("<div>").addClass("strp-nav-button-icon"))).hide()).append(this._next = $("<div>").addClass("strp-nav strp-nav-next").append($("<div>").addClass("strp-nav-button").append($("<div>").addClass("strp-nav-button-background")).append($("<div>").addClass("strp-nav-button-icon"))).hide()).append(this._close = $("<div>").addClass("strp-close").append($("<div>").addClass("strp-close-background")).append($("<div>").addClass("strp-close-icon")))), 
            Pages.initialize(this._pages), Support.mobileTouch && this.element.addClass("strp-mobile-touch"), 
            Support.svg || this.element.addClass("strp-no-svg"), this._close.on("click", $.proxy(function(a) {
                a.preventDefault(), this.hide();
            }, this)), this._previous.on("click", $.proxy(function(a) {
                this.previous(), this._onMouseMove(a);
            }, this)), this._next.on("click", $.proxy(function(a) {
                this.next(), this._onMouseMove(a);
            }, this)), this.hideUI(null, 0);
        },
        setSkin: function(a) {
            this._skin && this.element.removeClass("strp-window-skin-" + this._skin), this.element.addClass("strp-window-skin-" + a), 
            this._skin = a;
        },
        setSpinnerSkin: function(a) {
            this.spinnerMove && (this._spinnerSkin && this.spinnerMove.removeClass("strp-spinner-move-skin-" + this._spinnerSkin), 
            this.spinnerMove.addClass("strp-spinner-move-skin-" + a), this._spinner.refresh(), 
            this._spinnerSkin = a);
        },
        startObservingResize: function() {
            this._isObservingResize || (this._onWindowResizeHandler = $.proxy(this._onWindowResize, this), 
            $(window).on("resize orientationchange", this._onWindowResizeHandler), this._isObservingResize = !0);
        },
        stopObservingResize: function() {
            this._onWindowResizeHandler && ($(window).off("resize orientationchange", this._onWindowResizeHandler), 
            this._onWindowResizeHandler = null), this._isObservingResize = !1;
        },
        _onWindowResize: function() {
            var a;
            (a = Pages.page) && (a.animated || a.animatingWindow ? (a.fitToWindow(), a.show()) : (a.fitToWindow(), 
            this.resize(a.z, null, 0), this.adjustPrevNext(null, !0)));
        },
        resize: function(a, b, c) {
            var d = this.getOrientation(), e = "vertical" == d ? "Height" : "Width", f = e.toLowerCase();
            a > 0 && (this.visible = !0, this.startObservingResize());
            var g, h = Window.element["outer" + e]();
            if (0 == h) g = this.view.options.effects.window.show, this.element.addClass("strp-opening"), 
            this.opening = !0; else if ("number" == $.type(c)) g = c; else {
                var i = this.view.options.effects.transition, j = i.min, k = i.max, l = k - j, m = Bounds.viewport(), n = Math.abs(h - a), o = Math.min(1, n / m[f]);
                g = Math.round(j + o * l);
            }
            0 == a && (this.closing = !0, this.element.is(":animated") || this.element.addClass("strp-closing"));
            var p = {
                overflow: "visible"
            };
            p[f] = a;
            var q = 1;
            this._outerWidth = null, this._offsetLeft = null;
            var r = this.view.options.onResize, s = "function" == $.type(r);
            return this.element.stop(!0).animate(p, $.extend({
                duration: g,
                complete: $.proxy(function() {
                    --q < 1 && this._afterResize(b);
                }, this)
            }, s ? {
                step: $.proxy(function(a, b) {
                    b.prop == f && r.call(Strip, b.prop, a, this.side);
                }, this)
            } : {})), this.spinnerMove && (q++, this.spinnerMove.stop(!0).animate(p, g, $.proxy(function() {
                --q < 1 && this._afterResize(b);
            }, this))), g;
        },
        _afterResize: function(a) {
            this.opening = !1, this.closing = !1, this.element.removeClass("strp-opening strp-closing"), 
            this._outerWidth = this.element.outerWidth(), this._offsetLeft = this.element.offset().left, 
            a && a();
        },
        adjustPrevNext: function(a, b) {
            if (this.view && Pages.page) {
                var c = Pages.page, d = this.element.is(":visible");
                d || this.element.show();
                var e = this._previous.attr("style");
                this._previous.removeAttr("style");
                var f = parseInt(this._previous.css("margin-top"));
                this._previous.attr({
                    style: e
                }), d || this.element.hide();
                var g = c.info ? c.info.outerHeight() : 0, h = this._previous.add(this._next), i = {
                    "margin-top": f - .5 * g
                }, j = this.view.options.effects.transition.min;
                "number" == $.type(b) && (j = b), this.opening && (j = 0), h.stop(!0).animate(i, j, a), 
                this._previous[this.mayPrevious() ? "show" : "hide"](), this._next[this.mayNext() ? "show" : "hide"]();
            }
        },
        resetPrevNext: function() {
            this._previous.add(this._next).stop(!0).removeAttr("style");
        },
        load: function(a, b) {
            this.views = a, Pages.add(a), b && this.setPosition(b);
        },
        setSide: function(a, b) {
            if (this.side == a) return void (b && b());
            if (this.visible) {
                var c = this.view ? this.view.options.effects.window.hide : 0;
                this.hideUI(null, c), this.unbindUI(), this.resize(0, $.proxy(function() {
                    this._safeResetsAfterSwitchSide(), Pages.hideVisibleInactive(0), this._setSide(a, b);
                }, this)), this._showUIOnResize = !0;
            } else this._setSide(a, b);
        },
        _setSide: function(a, b) {
            this.side = a;
            var c = this.getOrientation(), d = this.element;
            this.spinnerMove && (d = d.add(this.spinnerMove)), d.removeClass("strp-horizontal strp-vertical").addClass("strp-" + c);
            var e = "strp-side-";
            d.removeClass(e + "top " + e + "right " + e + "bottom " + e + "left").addClass(e + a), 
            b && b();
        },
        getOrientation: function() {
            return "left" == this.side || "right" == this.side ? "horizontal" : "vertical";
        },
        startLoading: function() {
            this._spinner && (this.spinnerMove.show(), this._spinner.show());
        },
        stopLoading: function() {
            if (this._spinner) {
                1 > Pages.getLoadingCount() && this._spinner.hide($.proxy(function() {
                    this.spinnerMove.hide();
                }, this));
            }
        },
        setPosition: function(a, b) {
            this._position = a, this.view = this.views[a - 1], this.stopHideQueue(), this.page = Pages.show(a, $.proxy(function() {
                var c = this.view.options.afterPosition;
                "function" == $.type(c) && c.call(Strip, a), b && b();
            }, this));
        },
        hide: function(a) {
            if (this.view) {
                var b = this.queues.hide;
                b.queue([]), b.queue($.proxy(function(a) {
                    Pages.stop(), a();
                }, this)), b.queue($.proxy(function(a) {
                    var b = this.view ? this.view.options.effects.window.hide : 0;
                    this.unbindUI(), this.hideUI(null, b), this.unbindHideOnClickOutside(), Keyboard.disable(), 
                    a();
                }, this)), b.queue($.proxy(function(a) {
                    Pages.removeActiveClasses(), this.resize(0, a, this.view.options.effects.window.hide), 
                    this._showUIOnResize = !0;
                }, this)), b.queue($.proxy(function(a) {
                    this._safeResetsAfterSwitchSide(), this.stopObservingResize(), Pages.removeAll(), 
                    this.timers.clear(), this._position = -1;
                    var b = this.view && this.view.options.afterHide;
                    "function" == $.type(b) && b.call(Strip), this.view = null, a();
                }, this)), "function" == $.type(a) && b.queue($.proxy(function(b) {
                    a(), b();
                }, this));
            }
        },
        stopHideQueue: function() {
            this.queues.hide.queue([]);
        },
        _safeResetsAfterSwitchSide: function() {
            this.element.removeAttr("style"), this.spinnerMove && this.spinnerMove.removeAttr("style"), 
            this.visible = !1, this.hideUI(null, 0), this.timers.clear("ui"), this.resetPrevNext(), 
            this._x = -1, this._y = -1;
        },
        mayPrevious: function() {
            return this.view && this.view.options.loop && this.views && this.views.length > 1 || 1 != this._position;
        },
        previous: function(a) {
            var b = this.mayPrevious();
            (a || b) && this.setPosition(this.getSurroundingIndexes().previous);
        },
        mayNext: function() {
            var a = this.views && this.views.length > 1;
            return this.view && this.view.options.loop && a || a && 1 != this.getSurroundingIndexes().next;
        },
        next: function(a) {
            var b = this.mayNext();
            (a || b) && this.setPosition(this.getSurroundingIndexes().next);
        },
        getSurroundingIndexes: function() {
            if (!this.views) return {};
            var a = this._position, b = this.views.length;
            return {
                previous: 1 >= a ? b : a - 1,
                next: a >= b ? 1 : a + 1
            };
        },
        bindHideOnClickOutside: function() {
            this.unbindHideOnClickOutside(), $(document.documentElement).on("click", this._delegateHideOutsideHandler = $.proxy(this._delegateHideOutside, this));
        },
        unbindHideOnClickOutside: function() {
            this._delegateHideOutsideHandler && ($(document.documentElement).off("click", this._delegateHideOutsideHandler), 
            this._delegateHideOutsideHandler = null);
        },
        _delegateHideOutside: function(a) {
            var b = Pages.page;
            if (this.visible && b && b.view.options.hideOnClickOutside) {
                var c = a.target;
                $(c).closest(".strip, .strp-window")[0] || this.hide();
            }
        },
        bindUI: function() {
            this.unbindUI(), Support.mobileTouch || (this.element.on("mouseenter", this._showUIHandler = $.proxy(this.showUI, this)).on("mouseleave", this._hideUIHandler = $.proxy(this.hideUI, this)), 
            this.element.on("mousemove", this._mousemoveUIHandler = $.proxy(function(a) {
                var b = a.pageX, c = a.pageY;
                this._hoveringNav || c == this._y && b == this._x || (this._x = b, this._y = c, 
                this.showUI(), this.startUITimer());
            }, this)), this._pages.on("mousemove", ".strp-container", this._onMouseMoveHandler = $.proxy(this._onMouseMove, this)).on("mouseleave", ".strp-container", this._onMouseLeaveHandler = $.proxy(this._onMouseLeave, this)).on("mouseenter", ".strp-container", this._onMouseEnterHandler = $.proxy(this._onMouseEnter, this)), 
            this.element.on("mouseenter", ".strp-nav", this._onNavMouseEnterHandler = $.proxy(this._onNavMouseEnter, this)).on("mouseleave", ".strp-nav", this._onNavMouseLeaveHandler = $.proxy(this._onNavMouseLeave, this)), 
            $(window).on("scroll", this._onScrollHandler = $.proxy(this._onScroll, this))), 
            this._pages.on("click", ".strp-container", this._onClickHandler = $.proxy(this._onClick, this));
        },
        unbindUI: function() {
            this._showUIHandler && (this.element.off("mouseenter", this._showUIHandler).off("mouseleave", this._hideUIHandler).off("mousemove", this._mousemoveUIHandler), 
            this._pages.off("mousemove", ".strp-container", this._onMouseMoveHandler).off("mouseleave", ".strp-container", this._onMouseLeaveHandler).off("mouseenter", ".strp-container", this._onMouseEnterHandler), 
            this.element.off("mouseenter", ".strp-nav", this._onNavMouseEnterHandler).off("mouseleave", ".strp-nav", this._onNavMouseLeaveHandler), 
            $(window).off("scroll", this._onScrollHandler), this._showUIHandler = null), this._onClickHandler && (this._pages.off("click", ".strp-container", this._onClickHandler), 
            this._onClickHandler = null);
        },
        _onScroll: function() {
            this._offsetLeft = this._outerWidth = null;
        },
        _onMouseMove: function(a) {
            var b = this._getEventSide(a), c = b.toLowerCase();
            this.element[(this["may" + b]() ? "add" : "remove") + "Class"]("strp-hovering-clickable"), 
            this._previous[("next" != c ? "add" : "remove") + "Class"]("strp-nav-previous-hover strp-nav-hover"), 
            this._next[("next" == c ? "add" : "remove") + "Class"]("strp-nav-next-hover strp-nav-hover");
        },
        _onMouseLeave: function() {
            this.element.removeClass("strp-hovering-clickable"), this._previous.removeClass("strp-nav-previous-hover").add(this._next.removeClass("strp-nav-next-hover")).removeClass("strp-nav-hover");
        },
        _onClick: function(a) {
            this[this._getEventSide(a).toLowerCase()](), this._onMouseMove(a);
        },
        _onMouseEnter: function(a) {
            this._onMouseMove(a);
        },
        _getEventSide: function(a) {
            var b = this._offsetLeft || this.element.offset().left, c = a.pageX - b;
            return .5 * (this._outerWidth || this.element.outerWidth()) > c ? "Previous" : "Next";
        },
        _onNavMouseEnter: function() {
            this._hoveringNav = !0, this.clearUITimer();
        },
        _onNavMouseLeave: function() {
            this._hoveringNav = !1, this.startUITimer();
        },
        showUI: function(a, b) {
            this.clearUITimer();
            var c = this.element.find(".strp-nav-button"), d = this.view ? this.view.options.effects.ui.show : 0;
            "number" == $.type(b) && (d = b), c.stop(!0).fadeTo(d, 1, "stripEaseInSine", $.proxy(function() {
                this.startUITimer(), "function" == $.type(a) && a();
            }, this));
        },
        hideUI: function(a, b) {
            var c = this.element.find(".strp-nav-button"), d = this.view ? this.view.options.effects.ui.hide : 0;
            "number" == $.type(b) && (d = b), c.stop(!0).fadeOut(d, "stripEaseOutSine", function() {
                "function" == $.type(a) && a();
            });
        },
        clearUITimer: function() {
            Support.mobileTouch || this.timers.clear("ui");
        },
        startUITimer: function() {
            Support.mobileTouch || (this.clearUITimer(), this.timers.set("ui", $.proxy(function() {
                this.hideUI();
            }, this), this.view ? this.view.options.uiDelay : 0));
        }
    }, Keyboard = {
        enabled: !1,
        keyCode: {
            left: 37,
            right: 39,
            esc: 27
        },
        enable: function(a) {
            this.disable(), a && ($(document).on("keydown", this._onKeyDownHandler = $.proxy(this.onKeyDown, this)).on("keyup", this._onKeyUpHandler = $.proxy(this.onKeyUp, this)), 
            this.enabled = a);
        },
        disable: function() {
            this.enabled = !1, this._onKeyUpHandler && ($(document).off("keyup", this._onKeyUpHandler).off("keydown", this._onKeyDownHandler), 
            this._onKeyUpHandler = this._onKeyDownHandler = null);
        },
        onKeyDown: function(a) {
            if (this.enabled && Window.visible) {
                var b = this.getKeyByKeyCode(a.keyCode);
                if (b && (!b || !this.enabled || this.enabled[b])) switch (a.preventDefault(), a.stopPropagation(), 
                b) {
                  case "left":
                    Window.previous();
                    break;

                  case "right":
                    Window.next();
                }
            }
        },
        onKeyUp: function(a) {
            if (this.enabled && Window.visible) {
                var b = this.getKeyByKeyCode(a.keyCode);
                if (b && (!b || !this.enabled || this.enabled[b])) switch (b) {
                  case "esc":
                    Window.hide();
                }
            }
        },
        getKeyByKeyCode: function(a) {
            for (var b in this.keyCode) if (this.keyCode[b] == a) return b;
            return null;
        }
    }, _Strip = {
        _disabled: !1,
        _fallback: !0,
        initialize: function() {
            Window.initialize(), this._disabled || this.startDelegating();
        },
        startDelegating: function() {
            this.stopDelegating(), $(document.documentElement).on("click", ".strip[href]", this._delegateHandler = $.proxy(this.delegate, this));
        },
        stopDelegating: function() {
            this._delegateHandler && ($(document.documentElement).off("click", ".strip[href]", this._delegateHandler), 
            this._delegateHandler = null);
        },
        delegate: function(a) {
            if (!this._disabled) {
                a.stopPropagation(), a.preventDefault();
                var b = a.currentTarget;
                _Strip.show(b);
            }
        },
        show: function(object) {
            if (this._disabled) return void this.showFallback.apply(_Strip, _slice.call(arguments));
            var options = arguments[1] || {}, position = arguments[2];
            arguments[1] && "number" == $.type(arguments[1]) && (position = arguments[1], options = {});
            var views = [], object_type, isElement = object && 1 == object.nodeType;
            switch (object_type = $.type(object)) {
              case "string":
              case "object":
                var view = new View(object, options), _dgo = "data-strip-group-options";
                if (view.group) {
                    if (isElement) {
                        var elements = $('.strip[data-strip-group="' + $(object).data("strip-group") + '"]'), groupOptions = {};
                        elements.filter("[" + _dgo + "]").each(function(i, element) {
                            $.extend(groupOptions, eval("({" + ($(element).attr(_dgo) || "") + "})"));
                        }), elements.each(function(a, b) {
                            position || b != object || (position = a + 1), views.push(new View(b, $.extend({}, groupOptions, options)));
                        });
                    }
                } else {
                    var groupOptions = {};
                    isElement && $(object).is("[" + _dgo + "]") && ($.extend(groupOptions, eval("({" + ($(object).attr(_dgo) || "") + "})")), 
                    view = new View(object, $.extend({}, groupOptions, options))), views.push(view);
                }
                break;

              case "array":
                $.each(object, function(a, b) {
                    var c = new View(b, options);
                    views.push(c);
                });
            }
            (!position || 1 > position) && (position = 1), position > views.length && (position = views.length), 
            Window.unbindHideOnClickOutside();
            var positionInAPG;
            isElement && (positionInAPG = Pages.getPositionInActivePageGroup(object)) ? (positionInAPG == Window._position && Window.bindHideOnClickOutside(), 
            Window.setPosition(positionInAPG)) : Window.load(views, position);
        },
        showFallback: function() {
            function a(b) {
                var c, d = $.type(b);
                if ("string" == d) c = b; else if ("array" == d && b[0]) c = a(b[0]); else if (_.isElement(b) && $(b).attr("href")) var c = $(b).attr("href"); else c = !!b.url && b.url;
                return c;
            }
            return function(b) {
                if (_Strip._fallback) {
                    var c = a(b);
                    c && (window.location.href = c);
                }
            };
        }()
    };
    return $.extend(Strip, {
        show: function() {
            return _Strip.show.apply(_Strip, _slice.call(arguments)), this;
        },
        hide: function() {
            return Window.hide(), this;
        },
        disable: function() {
            return _Strip.stopDelegating(), _Strip._disabled = !0, this;
        },
        enable: function() {
            return _Strip._disabled = !1, _Strip.startDelegating(), this;
        },
        fallback: function(a) {
            return _Strip._fallback = a, this;
        },
        setDefaultSkin: function(a) {
            return Options.defaults.skin = a, this;
        }
    }), (Browser.IE && Browser.IE < 7 || "number" == $.type(Browser.Android) && Browser.Android < 3 || Browser.MobileSafari && "number" == $.type(Browser.WebKit) && Browser.WebKit < 533.18) && (_Strip.show = _Strip.showFallback, 
    $.each("startDelegating stopDelegating initialize".split(" "), function(a, b) {
        _Strip[b] = function() {};
    }), Strip.hide = function() {
        return this;
    }), $(document).ready(function() {
        _Strip.initialize();
    }), Strip;
});